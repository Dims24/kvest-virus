import telebot
from datetime import datetime, timedelta
import time
from telebot import types
import json
import re

import keyboard.main_keyboard as keyboard
import database.db_aa as db
from Export.export import export_data

bot = telebot.TeleBot('6079655503:AAEP47NoV2WLdqXiCWaeE2vqr7tBZWiBpjQ')


def timeppp(message):
    newTimeString = datetime.fromtimestamp(message).strftime('%H:%M:%S - %d %b %Z')
    print(newTimeString)


def text_check(text):
    import re
    regex = re.compile('[^a-zA-Z–∞-—è–ê-–Ø0-9]')
    return regex.sub('', text)


menedjer = 123
admin_id = '64783167'


# 703608663
# 64783167

# -------------–°—Ç–∞—Ä—Ç---------------------------
@bot.message_handler(commands=['start'])
def handle_start(message):
    try:
        # if (message.from_user.id == menedjer):
        #     bot.send_message(message.chat.id, '–í–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω —ç–∫—Å–ø–æ—Ä—Ç', reply_markup=keyboard.export())
        # else:
        info = db.Data(message.chat)
        info.create()
        bot.send_sticker(message.chat.id,
                         "CAACAgIAAxkBAAEJWK5kjZlJ2sEiTMKMjs-oA8mQYG1nzgACpy0AAvJuaUjltZfIigUasC8E")
        bot.send_message(message.chat.id, '_–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–∑—å—è!_\n'
                                          '\n'
                                          "_–ü–æ–∫—É–ø–∞—Ç–µ–ª–∏ –∞–≤—Ç–æ –±—ã–≤–∞—é—Ç —Ä–∞–∑–Ω—ã–µ. –ö—Ç–æ-—Ç–æ –≥–æ—Ç–æ–≤ —Å—Ä–∞–∑—É –∑–∞–±–∏—Ä–∞—Ç—å –ø–æ–Ω—Ä–∞–≤–∏–≤—à—É—é—Å—è "
                                          "–º–æ–¥–µ–ª—å, –∞ –∫—Ç–æ-—Ç–æ –∑–∞–¥–∞—ë—Ç –º–∏–ª–ª–∏–æ–Ω –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∂–¥—É—é –¥–µ—Ç–∞–ª—å –ø—Ä–µ–∂–¥–µ, "
                                          "—á–µ–º –ø—Ä–∏–Ω—è—Ç—å —Ä–µ—à–µ–Ω–∏–µ. –ò–Ω–æ–≥–¥–∞ –≤–æ–ø—Ä–æ—Å—ã –º–æ–≥—É—Ç –ø–æ–∫–∞–∑–∞—Ç—å—Å—è —Å—Ç—Ä–∞–Ω–Ω—ã–º–∏ –∏–ª–∏ –¥–∞–∂–µ "
                                          "–≥–ª—É–ø—ã–º–∏, –Ω–æ –Ω–∞ —á—Ç–æ –Ω–µ –ø–æ–π–¥—ë—à—å —Ä–∞–¥–∏ —É–¥–∞—á–Ω–æ–π —Å–¥–µ–ª–∫–∏?\n"
                                          "\n"
                                          "–£ –Ω–∞—Å —Ç–æ–∂–µ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –∑–∞–¥–∞–Ω–∏–π –ø—Ä–æ –∞–≤—Ç–æ–∏–Ω–¥—É—Å—Ç—Ä–∏—é. –°–µ–π—á–∞—Å –º—ã "
                                          "–ø—Ä–æ–≤–µ—Ä–∏–º, –∫–∞–∫–∞—è –∏–∑ –∫–æ–º–∞–Ω–¥ –ª—É—á—à–µ –¥—Ä—É–≥–∏—Ö –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥–∞–∂–µ –∞–±—Å–æ–ª—é—Ç–Ω–æ "
                                          "–ª—é–±–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è!\n"
                                          "–ù—É, –∏ –∫–∞–∫ –≤ –∫–æ–Ω—Ü–µ –ª—é–±–æ–π —Å–¥–µ–ª–∫–∏, –ø–æ–ø—Ä–æ—Å–∏–º –≤–∞—Å —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å—Å—è —Ä—è–¥–æ–º "
                                          "—Å –æ—Ç–≥–∞–¥–∞–Ω–Ω–æ–π –º–∞—à–∏–Ω–æ–π_ üöô\n"
                                          "\n"
                                          "_–ï—Å–ª–∏ –≥–æ—Ç–æ–≤—ã, –≤–≤–µ–¥–∏—Ç–µ_ *–ø–æ–≥–Ω–∞–ª–∏*", parse_mode="Markdown", reply_markup=None)
        bot.register_next_step_handler(message, rules)
    except Exception as error:
        print(f'handle_start: {error}')
        # bot.send_message(64783167, f'–ë–æ—Ç–∞ –∑–∞–ø—É—Å—Ç–∏–ª: {message.from_user.first_name}, @{message.from_user.username}')
        # bot.send_message(1248171558, f'–ë–æ—Ç–∞ –∑–∞–ø—É—Å—Ç–∏–ª: {message.from_user.first_name}, @{message.from_user.username}')
        # bot.send_message(483241197, f'–ë–æ—Ç–∞ –∑–∞–ø—É—Å—Ç–∏–ª: {message.from_user.first_name}, @{message.from_user.username}')


# @bot.message_handler(func=lambda message: message.text.lower() == '—ç–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö', content_types=['text'])
# def export(message):
#     try:
#         if (message.from_user.id == menedjer):
#             # excel_name = export_data()
#             # print(excel_name)
#             # bot.send_document(message.chat.id, InputFile(excel_name))
#             # os.remove(excel_name)
#     except Exception as error:
#         print(f'export: {error}')


@bot.message_handler(content_types=['document', 'photo', 'audio', 'video', 'animation', 'voice', 'sticker'])
def take(message):
    print(message)
    bot.delete_message(message.chat.id, message.message_id)


# -------------–ü—Ä–∞–≤–∏–ª–∞---------------------------
def rules(message):
    try:
        if message.text.lower() in ['–ø–æ–≥–Ω–∞–ª–∏']:
            bot.send_sticker(message.chat.id,
                             "CAACAgIAAxkBAAEJWLBkjZli92j-kQqqcFb8ymUvrjjpCgACnzUAAvm7aUjr1Moqna8mOy8E")
            bot.send_message(message.chat.id,
                             "_–ü—Ä–µ–∂–¥–µ, —á–µ–º –º—ã –Ω–∞—á–Ω—ë–º, —Ä–∞—Å—Å–∫–∞–∂—É –æ–± –∏–≥—Ä–µ. –í—Å—ë –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ:\n"
                             "\n"
                             "1. –ü—Ä–∏–¥—É–º–∞–π—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –µ–≥–æ –≤ —ç—Ç–æ—Ç —á–∞—Ç\n"
                             "\n"
                             "2. –í—ã –∏–≥—Ä–∞–µ—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π, –∫–æ—Ç–æ—Ä–∞—è –≤ —ç—Ç–æ–º —á–∞—Ç–µ. –ò–≥—Ä–∞ –ø—Ä–æ–¥–ª–∏—Ç—Å—è —Ä–æ–≤–Ω–æ 60 –º–∏–Ω—É—Ç —Å "
                             "–∫–Ω–æ–ø–∫–∏ /start. –í—Ä–µ–º—è —É–∂–µ –∏–¥—ë—Ç!\n"
                             "\n"
                             "3. –í—ã –ø–æ–ª—É—á–∏—Ç–µ –º–µ–Ω—é —Å 8 –∑–∞–¥–∞–Ω–∏—è–º–∏. –í—ã–±–∏—Ä–∞–π—Ç–µ –ª—é–±–æ–µ –∏ –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ. "
                             "–ü—Ä–æ—Ö–æ–¥–∏—Ç—å –º–æ–∂–Ω–æ –≤ –ª—é–±–æ–º –ø–æ—Ä—è–¥–∫–µ.\n"
                             "\n"
                             "4. –Ø –ø—Ä–∏—à–ª—é –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –∑–∞–¥–∞–Ω–∏–µ, —Ä–µ—à–∏–≤ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é. "
                             "–ï—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É—è –æ–±–æ–∑–Ω–∞—á–µ–Ω–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å.\n"
                             "\n"
                             "5. –û—Ü–µ–Ω–∏–≤–∞–µ—Ç—Å—è –≤–∞—à–∞ —Å–∫–æ—Ä–æ—Å—Ç—å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è, –∫–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –∏  –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å "
                             "—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–¥–µ–ª–∞–µ—Ç–µ.\n"
                             "\n"
                             "6. –°–¥–µ–ª–∞–Ω–Ω—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏—Å–ª–∞—Ç—å —Å—é–¥–∞, –≤ —á–∞—Ç. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –∑–∞–¥–∞–Ω–∏–µ "
                             "—Å—á–∏—Ç–∞–µ—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–º –∏ –≤–æ–∑–ª–µ –Ω–µ–≥–æ –ø–æ—è–≤–∏—Ç—Å—è 2 –≥–∞–ª–æ—á–∫–∏.\n"
                             "\n"
                             "7. –ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–¥–∞–Ω–∏–π —É –≤–∞—Å –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –≤—Ä–µ–º—è –∏–∑—É—á–∏—Ç—å –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ "
                             "–≤—ã—Å—Ç–∞–≤–∫–∏. –ê –º—ã –ø–æ–∫–∞ –ø–æ–¥–≤–µ–¥—ë–º –∏—Ç–æ–≥–∏ –∏–≥—Ä—ã üèÜ\n"
                             "\n"
                             "–í—Å—ë –ø–æ–Ω—è—Ç–Ω–æ? –ï—Å–ª–∏ –¥–∞, –≤–≤–µ–¥–∏—Ç–µ_ *–≥–æ—Ç–æ–≤—ã*\n"
                             "_–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –∫–∞–∫–∏–µ-—Ç–æ –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É:_ [@blacklist_event](@blacklist_event)\n"
                             , parse_mode="Markdown")
            bot.register_next_step_handler(message, keybor)
        else:
            bot.send_chat_action(message.chat.id, 'typing')
            bot.send_message(message.chat.id, '_–ù–∞–¥–æ –≤–≤–µ—Å—Ç–∏_ *–ø–æ–≥–Ω–∞–ª–∏*\n',
                             parse_mode="Markdown")
            bot.register_next_step_handler(message, rules)
    except Exception as error:
        print(f'rules: {error}')
        bot.register_next_step_handler(message, rules)


# -------------–ú–µ–Ω—é---------------------------
def keybor(message):
    try:
        if message.text.lower() in ['–≥–æ—Ç–æ–≤—ã']:
            bot.send_message(message.chat.id, "_–†–∞–¥, —á—Ç–æ –≤—ã –≥–æ—Ç–æ–≤—ã ! –ó–Ω–∞—á–∏—Ç, –ø–æ—Ä–∞ –Ω–∞—á–∏–Ω–∞—Ç—å!\n"
                                              "\n"
                                              "–°–ø—Ä–∞–≤–∞ —Å–Ω–∏–∑—É –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–∫—Ä–æ–µ—Ç –º–µ–Ω—é, –Ω–∞–∂–º–∏ –µ—ë!_\n",
                             parse_mode="Markdown", reply_markup=keyboard.keyboard(message.chat))
        else:
            bot.send_message(message.chat.id, '_–í–≤–µ–¥–∏—Ç–µ_ *–≥–æ—Ç–æ–≤—ã*\n'
                             , parse_mode="Markdown")
            bot.register_next_step_handler(message, keybor)
    except Exception as error:
        print(f'keybor: {error}')
        bot.register_next_step_handler(message, keybor)


# -------------–í–æ–ø—Ä–æ—Å 1*---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–≤–æ–ø—Ä–æ—Å 1', content_types=['text'])
def question_1(message):
    try:
        if check_end_time(message.chat):
            start_question_at(message.chat, 'question_1')
            bot.send_message(message.chat.id,
                             '_–ê –≤—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –∑–∞–¥–∞–≤–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å–æ–º: ¬´–∞ –∫–∞–∫ –±—ã –≤—ã–≥–ª—è–¥–µ–ª–∞ –º–æ—è –º–∞—à–∏–Ω–∞, –µ—Å–ª–∏ –±—ã –±—ã–ª–∞ '
                             '—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–µ—Ä–æ–º?¬ª.\n'
                             '\n'
                             '–Ø –±—ã –∑–∞–¥–∞–ª—Å—è —Ç–∞–∫–∏–º –≤–æ–ø—Ä–æ—Å–æ–º, –±—É–¥—å —É –º–µ–Ω—è –º–∞—à–∏–Ω–∞ –∏ –ø—Ä–∞–≤–∞, –Ω—É –∏–ª–∏ —Ö–æ—Ç—è –±—ã —Ä—É–∫–∏_... _–Ω–æ —è '
                             '–≤—Å–µ–≥–æ –ª–∏—à—å –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –¥–∞–∂–µ –Ω–µ —Å—Ç–æ–ª—å —É–º–Ω—ã–π, –∫–∞–∫ ChatGPT\n'
                             '\n'
                             '–•–æ—Ç—è –Ω–∞ –∑–∞–≥–∞–¥–∫–∏ —É –º–µ–Ω—è —É–º–∞ —Ö–≤–∞—Ç–∞–µ—Ç_üòè', parse_mode="Markdown")
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAANoZJANpxpH2jqIowoSWPaQr_2gXFwAAkjMMRsZVoBIZP6dil5qImkBAAMCAANzAAMvBA',
                           caption='–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏—Ç–µ —ç—Ç—É –∫–∞—Ä—Ç–∏–Ω–∫—É. –ü–æ–ø—ã—Ç–∞–π—Ç–µ—Å—å –ø–æ–Ω—è—Ç—å, –∏–∑ –∫–∞–∫–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –Ω–∞ '
                                   '–≤—ã—Å—Ç–∞–≤–∫–µ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª—Å—è —ç—Ç–æ—Ç –∞–≤—Ç–æ–±–æ—Ç\n'
                                   '\n'
                                   'üöô _–í –æ—Ç–≤–µ—Ç –ø—Ä–∏—à–ª–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è._', parse_mode="Markdown")
            bot.register_next_step_handler(message, question_1_end)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_1: {error}')
        bot.register_next_step_handler(message, question_1)


def question_1_end(message):
    try:
        if check_end_time(message.chat):
            if message.text.lower() in ["—É–∞–∑", "—É–∞–∑–∏–∫", "—É–∞–∑469", "—É–∞–∑ 469"]:
                bot.send_message(message.chat.id,
                                 '_–ú–æ–ª–æ–¥—Ü—ã ü•≥ –í–æ—Ç –≤–∞–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —Å —Å–æ–≤–µ—Ç—Å–∫–æ–π –∫–ª–∞—Å—Å–∏–∫–∏!_', parse_mode="Markdown", )
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIBv2SQLFkhFsnmAQjJUOyPTniy9xelAALVzDEbGVaASPH3hxQ3EpXUAQADAgADeAADLwQ',
                               caption='–ö–∞–∫–∞—è –¥–æ–±—Ä–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è! –ö–∞–∂–µ—Ç—Å—è, –æ–Ω –º–∞—à–µ—Ç –∫–æ–º—É-—Ç–æ. –ú–æ–∂–µ—Ç, —Å–≤–æ–µ–π –ª—é–±–∏–º–æ–π?\n'
                                       '\n'
                                       '–ê —É –≤–∞—Å –ø–æ–ª—É—á–∏—Ç—Å—è —Ç–∞–∫–∞—è –∂–µ? –ü—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–º–∞—Ö–∞—Ç—å –∫–æ–º—É-—Ç–æ –¥–∞–∂–µ –≤—Å–µ –≤–º–µ—Å—Ç–µ)',
                               parse_mode="Markdown")
                bot.register_next_step_handler(message, question_1_photo)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                                 parse_mode="Markdown")
                bot.register_next_step_handler(message, question_1_end)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'antiquiz: {error}')
        bot.register_next_step_handler(message, question_1_end)


def question_1_photo(message):
    try:
        if check_end_time(message.chat):
            if message.content_type == 'photo':
                keyboard_inline = types.InlineKeyboardMarkup()
                confirm_button = types.InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data=f'confirm')
                cancel_button = types.InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='cancel')
                keyboard_inline.row(confirm_button, cancel_button)
                bot.send_photo(admin_id, message.photo[-1].file_id,
                               caption=f'–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É —ç—Ç–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è "{message.chat.title}".\n'
                                       f'\n'
                                       f'–ó–∞–¥–∞–Ω–∏–µ 1 (–£–ê–ó):\n'
                                       f'\n'
                                       f'[ {message.chat} ]\n'
                                       f'#question_1#',
                               reply_markup=keyboard_inline)

                @bot.callback_query_handler(func=lambda call: True)
                def callback_handler(call):
                    text = call.message.caption
                    match = re.search(r'\[(.*?)\]', text)
                    question = re.search(r'\#(.*?)\#', text)
                    text = match.group(1).replace("'", "\"")
                    text_end = text.replace("None", "null")
                    value = json.loads(text_end)
                    chat = types.Chat.de_json(value)
                    if call.data == 'confirm':
                        end_question_at(chat, question.group(1))
                        bot.send_message(call.from_user.id, f'–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ —É \"{chat.title}\"')
                        bot.delete_message(call.from_user.id, call.message.id)
                        bot.send_message(chat.id, '–•–º, —É–≤–µ—Ä–µ–Ω —ç—Ç–æ —Ñ–æ—Ç–æ –æ—Ü–µ–Ω—è—Ç –ø–æ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤—É.\n–û—Ç–∫—Ä—ã–≤–∞–π –º–µ–Ω—é, '
                                                  '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ üëçüèº', reply_markup=keyboard.keyboard(chat))
                        if check_final(chat):
                            end_at(chat)
                            bot.send_sticker(chat.id,
                                             'CAACAgIAAxkBAAEJWLJkjZnnq-9Z6FIKDa7Sjzjv2udGTgACaS8AAmjYaUgPYCMFmg1OtC8E')
                            bot.send_message(chat.id, '–í–∞—É! ü•≥ü•≥ü•≥\n'
                                                      '\n'
                                                      '–Ø –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ —Ö–æ—Ä–æ—à–æ –≤—ã —Ä–∞–∑–±–∏—Ä–∞–µ—Ç–µ—Å—å –≤ –∞–≤—Ç–æ–º–æ–±–∏–ª—è—Ö.'
                                                      '–ù–µ –∫–∞–∂–¥—ã–π —Å–º–æ–≥ –±—ã –ø—Ä–æ–π—Ç–∏ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã. '
                                                      '–ï—â—ë –∏ –≤–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∞–ø–ª–æ–¥–∏—Ä—É—é —Å—Ç–æ—è.\n'
                                                      '\n'
                                                      '–°–∫–æ—Ä–æ –≤–µ–¥—É—â–∏–π –æ–±—ä—è–≤–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã, –∞ –≤—ã –ø–æ–∫–∞ –º–æ–∂–µ—Ç–µ '
                                                      '–µ—â—ë –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –≤—ã—Å—Ç–∞–≤–∫–æ–π\n'
                                                      '‚ù§Ô∏è', reply_markup=None)
                    elif call.data == 'cancel':
                        bot.send_message(chat.id, '–•–º.. –¥–∞—é –µ—â—ë —à–∞–Ω—Å üòä')
                        bot.delete_message(call.from_user.id, call.message.id)
                        bot.send_message(call.from_user.id, f'–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ —É \"{chat.title}\"')
                        bot.register_next_step_handler(message, question_1_photo)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                                 parse_mode="Markdown")
                bot.register_next_step_handler(message, question_1_photo)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_1_photo: {error}')
        bot.register_next_step_handler(message, question_1_photo)


# -------------–í–æ–ø—Ä–æ—Å 2*---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–≤–æ–ø—Ä–æ—Å 2', content_types=['text'])
def question_2(message):
    try:
        if check_end_time(message.chat):
            start_question_at(message.chat, 'question_2')
            bot.send_message(message.chat.id,
                             '_–í—Å–µ–º –Ω–∞–º –∏–∑–≤–µ—Å—Ç–Ω–æ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å–∞–π—Ç–æ–≤ —Å –æ—Ç–∑—ã–≤–∞–º–∏ –Ω–∞ —á—Ç–æ-–ª–∏–±–æ. –ù–∞ –∫–∏–Ω–æ, –Ω–∞ –∏–≥—Ä—É—à–∫–∏, –Ω–∞ '
                             '—ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫—É, –æ–¥–µ–∂–¥—É –∏ —Ç.–¥. –ù–æ —Å—Ç–∞–ª–∫–∏–≤–∞–ª–∏—Å—å –ª–∏ –≤—ã –≤ –∂–∏–∑–Ω–∏ —Å –æ—Ç–∑—ã–≤–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É '
                             '–Ω–∞—Å—Ç–æ–ª—å–∫–æ –ø—Ä–∞–≤–¥–∏–≤–æ –Ω–∞–ø–∏—Å–∞–Ω—ã, —á—Ç–æ –ø–æ—Ä–æ–π –¥–∞–∂–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –¥–µ—Ç–∞–ª–µ–π –æ–ø–∏—Å—ã–≤–∞–µ–º–æ–π –≤–µ—â–∏ '
                             '–Ω–µ –Ω—É–∂–Ω–æ?_\n'
                             '\n'
                             '_–ù–∞–º –≤–æ—Ç —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –æ–¥–∏–Ω —Ç–∞–∫–æ–π_ üò±', parse_mode="Markdown", )
            bot.send_voice(message.chat.id,
                           'AwACAgQAAxkBAAICF2SQWDRq8lKX44RRfy8V9TEbYYl2AALNPwACjHeBUNTWKcX-my1TLwQ',
                           caption='–ü–æ—Å–ª—É—à–∞–π—Ç–µ –∞—É–¥–∏–æ—Å–æ–æ–±—â–µ–Ω–∏–µ\n'
                                   '\n'
                                   'üöô _–í –æ—Ç–≤–µ—Ç –Ω–∞–ø–∏—à–∏—Ç–µ, –Ω–∞ –∫–∞–∫—É—é –º–∞—à–∏–Ω—É —ç—Ç–æ—Ç –æ—Ç–∑—ã–≤._', parse_mode="Markdown")
            bot.register_next_step_handler(message, question_2_end)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_2: {error}')
        bot.register_next_step_handler(message, question_2)


def question_2_end(message):
    try:
        if check_end_time(message.chat):
            if message.text.lower() in ["–±—É–≥–∞—Ç—Ç–∏", "bugatti", "bugatti veyron grand sport", "–±—É–≥–∞—Ç—Ç–∏ –≤–µ–π—Ä–æ–Ω",
                                        "bugatti veyron"]:
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAICHmSQYt_Bovz6JOCGA0hpXyOiYxoaAAL6zTEbGVaASP1OCBLYputUAQADAgADeQADLwQ',
                               caption='_–ú–æ–ª–æ–¥—Ü—ã\n'
                                       '–≠—Ç–∏ —Ä–µ–±—è—Ç–∞ –Ω–∞ —Ñ–æ—Ç–æ –≤—ã–≥–ª—è–¥—è—Ç –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∞—è –∫–æ–º–∞–Ω–¥–∞. –¢—É—Ç —Ö–æ–¥—è—Ç —Å–ª—É—Ö–∏, —á—Ç–æ –∏ –≤—ã '
                                       '–∫–æ–ª–ª–µ–∫—Ç–∏–≤ —Ö–æ—Ç—å –∫—É–¥–∞. –î–æ–∫–∞–∂–∏—Ç–µ —ç—Ç–æ, –ø–æ–≤—Ç–æ—Ä–∏–≤ —Ñ–æ—Ç–æ_ üî•'
                               , parse_mode="Markdown")
                bot.register_next_step_handler(message, question_2_photo)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                                 parse_mode="Markdown")
                bot.register_next_step_handler(message, question_2_end)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_2_end: {error}')
        bot.register_next_step_handler(message, question_2_end)


def question_2_photo(message):
    try:
        if check_end_time(message.chat):
            if message.content_type == 'photo':
                keyboard_inline = types.InlineKeyboardMarkup()
                confirm_button = types.InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='confirm')
                cancel_button = types.InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='cancel')
                keyboard_inline.row(confirm_button, cancel_button)
                bot.send_photo(admin_id, message.photo[-1].file_id,
                               caption=f'–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É —ç—Ç–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è "{message.chat.title}":\n'
                                       f'\n'
                                       f'–ó–∞–¥–∞–Ω–∏–µ 2 (–±—É–≥–∞—Ç—Ç–∏):\n'
                                       f'\n'
                                       f'[ {message.chat} ]\n'
                                       f'#question_2#',
                               reply_markup=keyboard_inline)

                @bot.callback_query_handler(func=lambda call: True)
                def callback_handler(call):
                    text = call.message.caption
                    match = re.search(r'\[(.*?)\]', text)
                    question = re.search(r'\#(.*?)\#', text)
                    text = match.group(1).replace("'", "\"")
                    text_end = text.replace("None", "null")
                    value = json.loads(text_end)
                    chat = types.Chat.de_json(value)
                    if call.data == 'confirm':
                        end_question_at(chat, question.group(1))
                        bot.send_message(call.from_user.id, f'–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ —É \"{chat.title}\"')
                        bot.delete_message(call.from_user.id, call.message.id)
                        bot.send_message(chat.id, '–•–º, —É–≤–µ—Ä–µ–Ω —ç—Ç–æ —Ñ–æ—Ç–æ –æ—Ü–µ–Ω—è—Ç –ø–æ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤—É.\n –û—Ç–∫—Ä—ã–≤–∞–π –º–µ–Ω—é, '
                                                  '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ üëçüèº', reply_markup=keyboard.keyboard(chat))
                        if check_final(chat):
                            end_at(chat)
                            bot.send_sticker(chat.id,
                                             'CAACAgIAAxkBAAEJWLJkjZnnq-9Z6FIKDa7Sjzjv2udGTgACaS8AAmjYaUgPYCMFmg1OtC8E')
                            bot.send_message(chat.id, '–í–∞—É! ü•≥ü•≥ü•≥\n'
                                                      '\n'
                                                      '–Ø –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ —Ö–æ—Ä–æ—à–æ –≤—ã —Ä–∞–∑–±–∏—Ä–∞–µ—Ç–µ—Å—å –≤ –∞–≤—Ç–æ–º–æ–±–∏–ª—è—Ö.'
                                                      '–ù–µ –∫–∞–∂–¥—ã–π —Å–º–æ–≥ –±—ã –ø—Ä–æ–π—Ç–∏ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã. '
                                                      '–ï—â—ë –∏ –≤–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∞–ø–ª–æ–¥–∏—Ä—É—é —Å—Ç–æ—è.\n'
                                                      '\n'
                                                      '–°–∫–æ—Ä–æ –≤–µ–¥—É—â–∏–π –æ–±—ä—è–≤–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã, –∞ –≤—ã –ø–æ–∫–∞ –º–æ–∂–µ—Ç–µ '
                                                      '–µ—â—ë –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –≤—ã—Å—Ç–∞–≤–∫–æ–π\n'
                                                      '‚ù§Ô∏è', reply_markup=None)
                    elif call.data == 'cancel':
                        bot.send_message(chat.id, '–•–º.. –¥–∞—é –µ—â—ë —à–∞–Ω—Å üòä')
                        bot.delete_message(call.from_user.id, call.message.id)
                        bot.send_message(call.from_user.id, f'–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ —É \"{chat.title}\"')
                        bot.register_next_step_handler(message, question_2_photo)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                                 parse_mode="Markdown")
                bot.register_next_step_handler(message, question_2_photo)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_2_photo: {error}')
        bot.register_next_step_handler(message, question_2_photo)


# -------------–í–æ–ø—Ä–æ—Å 3---------------------------

@bot.message_handler(func=lambda message: message.text.lower() == '–≤–æ–ø—Ä–æ—Å 3', content_types=['text'])
def question_3(message):
    try:
        if check_end_time(message.chat):
            start_question_at(message.chat, 'question_3')
            bot.send_message(message.chat.id,
                             '_–£ –∫–∞–∂–¥–æ–π –º–∞—à–∏–Ω—ã –µ—Å—Ç—å —Å–≤–æ–∏ –æ–±—ã—á–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏._\n'
                             '\n'
                             '*–ù–∞–ø—Ä–∏–º–µ—Ä:* _–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ—à–∞–¥–∏–Ω—ã—Ö —Å–∏–ª, —Ä–∞–±–æ—á–∏–π –æ–±—ä—ë–º –¥–≤–∏–≥–∞—Ç–µ–ª—è, –¥–ª–∏–Ω–∞ –∫–æ—Ä–ø—É—Å–∞ –∏ —Ç.–¥. '
                             '–ù–æ —ç—Ç–æ —Å–∫—É—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...\n'
                             '\n'
                             '–î—Ä—É–≥–æ–µ –¥–µ–ª–æ, –∑–Ω–∞—Ç—å –æ –º–∞—à–∏–Ω–µ –µ—ë –∏—Å—Ç–æ—Ä–∏—é! –î–∞–≤–∞–π—Ç–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–º, —á—Ç–æ —É –º–∞—à–∏–Ω –µ—Å—Ç—å —Å–≤–æ–π '
                             '–∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –ø–∞—Å–ø–æ—Ä—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤–º–µ—Å—Ç–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ —É–∫–∞–∑–∞–Ω—ã —Ñ–∞–∫—Ç—ã –æ –Ω–µ–π_ ü•∞',
                             parse_mode="Markdown", )
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAIDv2SQgGfbwD80wGlZfVpuguEdiVIfAAJFzTEbaTaJSAUJHtj5F2RKAQADAgADeQADLwQ',
                           caption='–í–∞–º –±—É–¥—É—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç—ã –æ –º–∞—à–∏–Ω–µ. –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç–µ, –æ –∫–∞–∫–æ–π –∏–¥—ë—Ç '
                                   '—Ä–µ—á—å. –ï—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ø—ã—Ç–æ–∫!\n'
                                   '\n'
                                   'üöô _–í –æ—Ç–≤–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ ¬´–∫–ª–∏—á–∫—É¬ª –∞–≤—Ç–æ–º–æ–±–∏–ª—è_', parse_mode="Markdown")
            bot.register_next_step_handler(message, question_3_1)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_3: {error}')
        bot.register_next_step_handler(message, question_3)


def question_3_1(message):
    try:
        if check_end_time(message.chat):
            if message.text.lower() in ["–≤–∞–∑-2101", "–∫–æ–ø–µ–π–∫–∞", "–≤–∞–∑ 2101", "–≤–∞–∑ 2101", "–≤–∞–∑-2101", "–≤–∞–∑2101"]:
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIDxWSQgxhyRWsKvRtMGIe_LyZHFauyAAJTzTEbaTaJSLJlVCJD3tSSAQADAgADeQADLwQ',
                               '_–û—Ç–ª–∏—á–Ω–æ, –º–æ–ª–æ–¥—Ü—ã!_ üëçüèºüëçüèºüëçüèº',
                               parse_mode="Markdown",
                               )
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIDwGSQgPB07vN5wuAOybIowcXdKYPCAAJHzTEbaTaJSO8MmfAFPfufAQADAgADeQADLwQ',
                               caption='_–í–æ–¥–∏—Ç–µ–ª—å –∫—Ä–∞—Å–Ω–æ–≥–æ –í–ê–ó-2101 —è–≤–Ω–æ –Ω–µ —Ö–æ—Ç–µ–ª –ø–æ–ø–∞—Å—Ç—å –≤ —Ç–∞–∫—É—é —Å–∏—Ç—É–∞—Ü–∏—é, –Ω–æ '
                                       '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —É –Ω–µ–≥–æ –ø–æ–ª—É—á–∏–ª–∞—Å—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–ª–æ—Ä–∏—Ç–Ω–∞—è._\n'
                                       '\n'
                                       '_–°–º–æ–∂–µ—Ç–µ –ø–æ–∫–∞–∑–∞—Ç—å –∫–∞–∫ –±—ã –≤—ã –≤–µ–ª–∏ —Å–µ–±—è, –µ—Å–ª–∏ –± –≤–∞—Å –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –Ω–∞ '
                                       '—Ç–∞–∫–æ–π –º–∞—à–∏–Ω–µ?_ üöó', parse_mode="Markdown",
                               )
                bot.register_next_step_handler(message, question_3_photo)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIDwWSQgXzcM2hSsyB-cajBLfvmntVgAAJJzTEbaTaJSNkdE-QFB4H8AQADAgADeQADLwQ',
                               caption='_–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë_ üòä\n',
                               parse_mode="Markdown")
                bot.register_next_step_handler(message, question_3_2)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_3_1: {error}')
        bot.register_next_step_handler(message, question_3_1)


def question_3_2(message):
    try:
        if check_end_time(message.chat):
            if message.text.lower() in ["–≤–∞–∑-2101", "–∫–æ–ø–µ–π–∫–∞", "–≤–∞–∑ 2101", "–≤–∞–∑ 2101", "–≤–∞–∑-2101", "–≤–∞–∑2101"]:
                bot.send_message(message.chat.id,
                                 '_–û—Ç–ª–∏—á–Ω–æ, –º–æ–ª–æ–¥—Ü—ã!_ üëçüèºüëçüèºüëçüèº',
                                 parse_mode="Markdown", )
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIDxWSQgxhyRWsKvRtMGIe_LyZHFauyAAJTzTEbaTaJSLJlVCJD3tSSAQADAgADeQADLwQ',
                               caption='_–í–æ–¥–∏—Ç–µ–ª—å –∫—Ä–∞—Å–Ω–æ–≥–æ –í–ê–ó-2101 —è–≤–Ω–æ –Ω–µ —Ö–æ—Ç–µ–ª –ø–æ–ø–∞—Å—Ç—å –≤ —Ç–∞–∫—É—é —Å–∏—Ç—É–∞—Ü–∏—é, –Ω–æ '
                                       '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —É –Ω–µ–≥–æ –ø–æ–ª—É—á–∏–ª–∞—Å—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–ª–æ—Ä–∏—Ç–Ω–∞—è._\n'
                                       '\n'
                                       '_–°–º–æ–∂–µ—Ç–µ –ø–æ–∫–∞–∑–∞—Ç—å –∫–∞–∫ –±—ã –≤—ã –≤–µ–ª–∏ —Å–µ–±—è, –µ—Å–ª–∏ –± –≤–∞—Å –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –Ω–∞ '
                                       '—Ç–∞–∫–æ–π –º–∞—à–∏–Ω–µ?_ üöó', parse_mode="Markdown", )
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIDwGSQgPB07vN5wuAOybIowcXdKYPCAAJHzTEbaTaJSO8MmfAFPfufAQADAgADeQADLwQ')
                bot.register_next_step_handler(message, question_3_photo)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIDwmSQgpERGqJk1IwYuXW7fueJe6N-AAJPzTEbaTaJSGYsn-yiKXFJAQADAgADeQADLwQ',
                               caption='_–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë_ üòä\n',
                               parse_mode="Markdown")
                bot.register_next_step_handler(message, question_3_3)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_3_2: {error}')
        bot.register_next_step_handler(message, question_3_2)


def question_3_3(message):
    try:
        if check_end_time(message.chat):
            if message.text.lower() in ["–≤–∞–∑-2101", "–∫–æ–ø–µ–π–∫–∞", "–≤–∞–∑ 2101", "–≤–∞–∑ 2101", "–≤–∞–∑-2101", "–≤–∞–∑2101"]:
                bot.send_message(message.chat.id,
                                 '_–û—Ç–ª–∏—á–Ω–æ, –º–æ–ª–æ–¥—Ü—ã!_ üëçüèºüëçüèºüëçüèº',
                                 parse_mode="Markdown", )
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIDxWSQgxhyRWsKvRtMGIe_LyZHFauyAAJTzTEbaTaJSLJlVCJD3tSSAQADAgADeQADLwQ',
                               caption='_–í–æ–¥–∏—Ç–µ–ª—å –∫—Ä–∞—Å–Ω–æ–≥–æ –í–ê–ó-2101 —è–≤–Ω–æ –Ω–µ —Ö–æ—Ç–µ–ª –ø–æ–ø–∞—Å—Ç—å –≤ —Ç–∞–∫—É—é —Å–∏—Ç—É–∞—Ü–∏—é, –Ω–æ '
                                       '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —É –Ω–µ–≥–æ –ø–æ–ª—É—á–∏–ª–∞—Å—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–ª–æ—Ä–∏—Ç–Ω–∞—è._\n'
                                       '\n'
                                       '_–°–º–æ–∂–µ—Ç–µ –ø–æ–∫–∞–∑–∞—Ç—å –∫–∞–∫ –±—ã –≤—ã –≤–µ–ª–∏ —Å–µ–±—è, –µ—Å–ª–∏ –± –≤–∞—Å –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –Ω–∞ '
                                       '—Ç–∞–∫–æ–π –º–∞—à–∏–Ω–µ?_ üöó', parse_mode="Markdown", )
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIDwGSQgPB07vN5wuAOybIowcXdKYPCAAJHzTEbaTaJSO8MmfAFPfufAQADAgADeQADLwQ')
                bot.register_next_step_handler(message, question_3_photo)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIDw2SQgr-C5-_xdE7ejvRcU0Dbn3s_AAJQzTEbaTaJSIQ6TNIuYCv0AQADAgADeQADLwQ',
                               caption='_–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë_ üòä\n',
                               parse_mode="Markdown")
                bot.register_next_step_handler(message, question_3_4)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_3_3: {error}')
        bot.register_next_step_handler(message, question_3_3)


def question_3_4(message):
    try:
        if check_end_time(message.chat):
            if message.text.lower() in ["–≤–∞–∑-2101", "–∫–æ–ø–µ–π–∫–∞", "–≤–∞–∑ 2101", "–≤–∞–∑ 2101", "–≤–∞–∑-2101", "–≤–∞–∑2101"]:
                bot.send_message(message.chat.id,
                                 '_–û—Ç–ª–∏—á–Ω–æ, –º–æ–ª–æ–¥—Ü—ã!_ üëçüèºüëçüèºüëçüèº',
                                 parse_mode="Markdown", )
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIDxWSQgxhyRWsKvRtMGIe_LyZHFauyAAJTzTEbaTaJSLJlVCJD3tSSAQADAgADeQADLwQ',
                               caption='_–í–æ–¥–∏—Ç–µ–ª—å –∫—Ä–∞—Å–Ω–æ–≥–æ –í–ê–ó-2101 —è–≤–Ω–æ –Ω–µ —Ö–æ—Ç–µ–ª –ø–æ–ø–∞—Å—Ç—å –≤ —Ç–∞–∫—É—é —Å–∏—Ç—É–∞—Ü–∏—é, –Ω–æ '
                                       '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —É –Ω–µ–≥–æ –ø–æ–ª—É—á–∏–ª–∞—Å—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–ª–æ—Ä–∏—Ç–Ω–∞—è._\n'
                                       '\n'
                                       '_–°–º–æ–∂–µ—Ç–µ –ø–æ–∫–∞–∑–∞—Ç—å –∫–∞–∫ –±—ã –≤—ã –≤–µ–ª–∏ —Å–µ–±—è, –µ—Å–ª–∏ –± –≤–∞—Å –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –Ω–∞ '
                                       '—Ç–∞–∫–æ–π –º–∞—à–∏–Ω–µ?_ üöó', parse_mode="Markdown", )
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIDwGSQgPB07vN5wuAOybIowcXdKYPCAAJHzTEbaTaJSO8MmfAFPfufAQADAgADeQADLwQ')
                bot.register_next_step_handler(message, question_3_photo)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIDxGSQgvXWmPA5OCFc5tOc_ZUDRd77AAJSzTEbaTaJSOnMO1Z7v8IEAQADAgADeQADLwQ',
                               caption='–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                               parse_mode="Markdown")
                bot.register_next_step_handler(message, question_3_4)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_3_4: {error}')
        bot.register_next_step_handler(message, question_3_4)


def question_3_end(message):
    try:
        if check_end_time(message.chat):
            if message.text.lower() in ["–≤–∞–∑-2101", "–∫–æ–ø–µ–π–∫–∞", "–≤–∞–∑ 2101", "–≤–∞–∑ 2101", "–≤–∞–∑-2101", "–≤–∞–∑2101"]:
                bot.send_message(message.chat.id,
                                 '_–û—Ç–ª–∏—á–Ω–æ, –º–æ–ª–æ–¥—Ü—ã!_ üëçüèºüëçüèºüëçüèº',
                                 parse_mode="Markdown", )
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIDxWSQgxhyRWsKvRtMGIe_LyZHFauyAAJTzTEbaTaJSLJlVCJD3tSSAQADAgADeQADLwQ',
                               caption='_–í–æ–¥–∏—Ç–µ–ª—å –∫—Ä–∞—Å–Ω–æ–≥–æ –í–ê–ó-2101 —è–≤–Ω–æ –Ω–µ —Ö–æ—Ç–µ–ª –ø–æ–ø–∞—Å—Ç—å –≤ —Ç–∞–∫—É—é —Å–∏—Ç—É–∞—Ü–∏—é, –Ω–æ '
                                       '—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —É –Ω–µ–≥–æ –ø–æ–ª—É—á–∏–ª–∞—Å—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–ª–æ—Ä–∏—Ç–Ω–∞—è._\n'
                                       '\n'
                                       '_–°–º–æ–∂–µ—Ç–µ –ø–æ–∫–∞–∑–∞—Ç—å –∫–∞–∫ –±—ã –≤—ã –≤–µ–ª–∏ —Å–µ–±—è, –µ—Å–ª–∏ –± –≤–∞—Å –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –Ω–∞ '
                                       '—Ç–∞–∫–æ–π –º–∞—à–∏–Ω–µ?_ üöó', parse_mode="Markdown", )
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIDwGSQgPB07vN5wuAOybIowcXdKYPCAAJHzTEbaTaJSO8MmfAFPfufAQADAgADeQADLwQ')
                bot.register_next_step_handler(message, question_3_photo)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                                 parse_mode="Markdown")
                bot.register_next_step_handler(message, question_3_end)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_3_end: {error}')
        bot.register_next_step_handler(message, question_3_end)


def question_3_photo(message):
    try:
        if check_end_time(message.chat):
            if message.content_type == 'photo':
                keyboard_inline = types.InlineKeyboardMarkup()
                confirm_button = types.InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='confirm')
                cancel_button = types.InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='cancel')
                keyboard_inline.row(confirm_button, cancel_button)
                bot.send_photo(admin_id, message.photo[-1].file_id,
                               caption=f'–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É —ç—Ç–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è "{message.chat.title}":\n'
                                       f'\n'
                                       f'–ó–∞–¥–∞–Ω–∏–µ 3 (–≤–∞–∑2101):\n'
                                       f'\n'
                                       f'[ {message.chat} ]'
                                       f'#question_3#',
                               reply_markup=keyboard_inline)

                @bot.callback_query_handler(func=lambda call: True)
                def callback_handler(call):
                    text = call.message.caption
                    match = re.search(r'\[(.*?)\]', text)
                    question = re.search(r'\#(.*?)\#', text)
                    text = match.group(1).replace("'", "\"")
                    text_end = text.replace("None", "null")
                    value = json.loads(text_end)
                    chat = types.Chat.de_json(value)
                    if call.data == 'confirm':
                        end_question_at(chat, question.group(1))
                        bot.send_message(call.from_user.id, f'–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ —É \"{chat.title}\"')
                        bot.delete_message(call.from_user.id, call.message.id)
                        bot.send_message(chat.id, '–•–º, —É–≤–µ—Ä–µ–Ω —ç—Ç–æ —Ñ–æ—Ç–æ –æ—Ü–µ–Ω—è—Ç –ø–æ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤—É.\n–û—Ç–∫—Ä—ã–≤–∞–π –º–µ–Ω—é, '
                                                  '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ üëçüèº', reply_markup=keyboard.keyboard(chat))
                        if check_final(chat):
                            end_at(chat)
                            bot.send_sticker(chat.id,
                                             'CAACAgIAAxkBAAEJWLJkjZnnq-9Z6FIKDa7Sjzjv2udGTgACaS8AAmjYaUgPYCMFmg1OtC8E')
                            bot.send_message(chat.id, '–í–∞—É! ü•≥ü•≥ü•≥\n'
                                                      '\n'
                                                      '–Ø –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ —Ö–æ—Ä–æ—à–æ –≤—ã —Ä–∞–∑–±–∏—Ä–∞–µ—Ç–µ—Å—å –≤ –∞–≤—Ç–æ–º–æ–±–∏–ª—è—Ö.'
                                                      '–ù–µ –∫–∞–∂–¥—ã–π —Å–º–æ–≥ –±—ã –ø—Ä–æ–π—Ç–∏ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã. '
                                                      '–ï—â—ë –∏ –≤–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∞–ø–ª–æ–¥–∏—Ä—É—é —Å—Ç–æ—è.\n'
                                                      '\n'
                                                      '–°–∫–æ—Ä–æ –≤–µ–¥—É—â–∏–π –æ–±—ä—è–≤–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã, –∞ –≤—ã –ø–æ–∫–∞ –º–æ–∂–µ—Ç–µ '
                                                      '–µ—â—ë –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –≤—ã—Å—Ç–∞–≤–∫–æ–π\n'
                                                      '‚ù§Ô∏è', reply_markup=None)
                    elif call.data == 'cancel':
                        bot.send_message(chat.id, '–•–º.. –¥–∞—é –µ—â—ë —à–∞–Ω—Å üòä')
                        bot.delete_message(call.from_user.id, call.message.id)
                        bot.send_message(call.from_user.id, f'–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ —É \"{chat.title}\"')
                        bot.register_next_step_handler(message, question_3_photo)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                                 parse_mode="Markdown")
                bot.register_next_step_handler(message, question_3_photo)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_3_photo: {error}')
        bot.register_next_step_handler(message, question_3_photo)


# -------------–í–æ–ø—Ä–æ—Å 4---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–≤–æ–ø—Ä–æ—Å 4', content_types=['text'])
def question_4(message):
    try:
        if check_end_time(message.chat):
            start_question_at(message.chat, 'question_4')
            bot.send_message(message.chat.id,
                             '_–ù–∞ –¥–æ—Ä–æ–≥–µ –æ–¥–Ω–∏–º –∏–∑ —Å–∞–º—ã—Ö –≤–∞–∂–Ω—ã—Ö –∞—Å–ø–µ–∫—Ç–æ–≤ —è–≤–ª—è–µ—Ç—Å—è_ *–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å!* _–ù–µ–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π '
                             '–≤–æ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∏ –ø–æ–≤–æ—Ä–æ—Ç –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å, –∏ –ø–µ—Ä–µ–∫–∞—Ç–∏-–ø–æ–ª–µ —Å–±–∏—Ç—å, –∏ –ø–æ–ª–æ–º–∞–Ω–Ω—É—é –º–∞—à–∏–Ω—É '
                             '–∫—É–ø–∏—Ç—å._\n'
                             '\n'
                             '_–ß—Ç–æ–±—ã —Å –≤–∞–º–∏ —Ç–∞–∫–æ–≥–æ –Ω–µ —Å–ª—É—á–∞–ª–æ—Å—å, –µ—Å—Ç—å –æ—Ç–ª–∏—á–Ω–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ '
                             '–∫–∞—á–µ—Å—Ç–≤–æ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å_ ‚úäüèº'
                             , parse_mode="Markdown", )
            bot.send_video(message.chat.id,
                           'BAACAgIAAxkBAAIDxmSQhP-zJlwYJdgPbOiWzn7ZST-JAALWMgACaTaJSDDU0KcWLNWuLwQ')
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAIDyGSQiM_4Sg4Z4cPChl4gG8sKPCyAAAJpzTEbaTaJSC-DOLoK-jWZAQADAgADeQADLwQ',
                           caption='–í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ—Å–ª–µ –Ω–µ–≥–æ '
                                   '–≤ –ª—é–±–æ–º –ø–æ—Ä—è–¥–∫–µ.\n'
                                   '\n'
                                   'üöô _–û—Ç–≤–µ—Ç –Ω–∞ –∫–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å –ø—Ä–∏—Å—ã–ª–∞–π—Ç–µ –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º._', parse_mode="Markdown")
            bot.register_next_step_handler(message, question_4_end)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_4: {error}')
        bot.register_next_step_handler(message, question_4)


def question_4_end(message):
    try:
        if check_end_time(message.chat):
            if message.text.lower() in ['3', '—Ç—Ä–∏']:
                if check_answer(message.chat, 'question_answer', "answer_1"):
                    bot.send_message(message.chat.id,
                                     '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                     parse_mode="Markdown", )
                    bot.register_next_step_handler(message, question_4_end)
                else:
                    bot.send_message(message.chat.id,
                                     '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è!',
                                     parse_mode="Markdown", )
                    change_answer(message.chat, 'question_answer', "answer_1")
                    if check_answer_final(message.chat, 'question_answer'):
                        bot.send_message(message.chat.id,
                                         '_–ú–æ–ª–æ–¥—Ü—ã_ üí™üèº _–¢–µ–ø–µ—Ä—å —Ñ–æ—Ç–æ!_', parse_mode="Markdown", )
                        bot.send_photo(message.chat.id,
                                       'AgACAgIAAxkBAAIDx2SQiHX4ValhuzyMmUqnn437dNc3AAJmzTEbaTaJSM6bNYh4O6hNAQADAgADeQADLwQ',
                                       caption='_–£—Ö —Ç—ã, –≤–æ—Ç —ç—Ç–æ –¥–∞–∞–∞! –°–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫–∞—è —Å—á–∞—Å—Ç–ª–∏–≤–∞—è —Å–µ–º—å—è‚ù§Ô∏è '
                                               '–í—ã —Å–≤–æ–µ–≥–æ —Ä–æ–¥–∞ —Ç–æ–∂–µ —Å–µ–º—å—è, –≤–µ–¥—å –∑–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç–µ –≤–º–µ—Å—Ç–µ!\n'
                                               '\n'
                                               '–ê —Å–º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫–æ–µ –∂–µ —Ñ–æ—Ç–æ? –¢–æ–ª—å–∫–æ –Ω–µ —Ç—Ä–æ–≥–∞–π—Ç–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—å, '
                                               '–æ–Ω –∏ —Ç–∞–∫ —Å—Ç–∞—Ä–µ–Ω—å–∫–∏–π —É–∂–µ —Å–æ–≤—Å–µ–º_ üòÖ', parse_mode="Markdown"
                                       )
                        bot.register_next_step_handler(message, question_4_photo)
                    else:
                        bot.register_next_step_handler(message, question_4_end)
            elif message.text.lower() in ['–∫—Ä–∞—Å–Ω–∞—è', '–∫—Ä–∞—Å–Ω–æ–≥–æ', '–±–æ—Ä–¥–æ–≤–∞—è', '–±–æ—Ä–¥–æ–≤–æ–≥–æ']:
                if check_answer(message.chat, 'question_answer', "answer_2"):
                    bot.send_message(message.chat.id,
                                     '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                     parse_mode="Markdown", )
                    bot.register_next_step_handler(message, question_4_end)
                else:
                    bot.send_message(message.chat.id,
                                     '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è!',
                                     parse_mode="Markdown", )
                    change_answer(message.chat, 'question_answer', "answer_2")
                    if check_answer_final(message.chat, 'question_answer'):
                        bot.send_message(message.chat.id,
                                         '_–ú–æ–ª–æ–¥—Ü—ã_ üí™üèº _–¢–µ–ø–µ—Ä—å —Ñ–æ—Ç–æ!_', parse_mode="Markdown", )
                        bot.send_photo(message.chat.id,
                                       'AgACAgIAAxkBAAIDx2SQiHX4ValhuzyMmUqnn437dNc3AAJmzTEbaTaJSM6bNYh4O6hNAQADAgADeQADLwQ',
                                       caption='_–£—Ö —Ç—ã, –≤–æ—Ç —ç—Ç–æ –¥–∞–∞–∞! –°–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫–∞—è —Å—á–∞—Å—Ç–ª–∏–≤–∞—è —Å–µ–º—å—è‚ù§Ô∏è '
                                               '–í—ã —Å–≤–æ–µ–≥–æ —Ä–æ–¥–∞ —Ç–æ–∂–µ —Å–µ–º—å—è, –≤–µ–¥—å –∑–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç–µ –≤–º–µ—Å—Ç–µ!\n'
                                               '\n'
                                               '–ê —Å–º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫–æ–µ –∂–µ —Ñ–æ—Ç–æ? –¢–æ–ª—å–∫–æ –Ω–µ —Ç—Ä–æ–≥–∞–π—Ç–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—å, '
                                               '–æ–Ω –∏ —Ç–∞–∫ —Å—Ç–∞—Ä–µ–Ω—å–∫–∏–π —É–∂–µ —Å–æ–≤—Å–µ–º_ üòÖ', parse_mode="Markdown"
                                       )
                        bot.register_next_step_handler(message, question_4_photo)
                    else:
                        bot.register_next_step_handler(message, question_4_end)
            elif message.text.lower() in ['6000', '6 —Ç—ã—Å—è—á', '—à–µ—Å—Ç—å —Ç—ã—Å—è—á',  "6", "—à–µ—Å—Ç—å"]:
                if check_answer(message.chat, 'question_answer', "answer_3"):
                    bot.send_message(message.chat.id,
                                     '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                     parse_mode="Markdown", )
                    bot.register_next_step_handler(message, question_4_end)
                else:
                    bot.send_message(message.chat.id,
                                     '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è!',
                                     parse_mode="Markdown", )
                    change_answer(message.chat, 'question_answer', "answer_3")
                    if check_answer_final(message.chat, 'question_answer'):
                        bot.send_message(message.chat.id,
                                         '_–ú–æ–ª–æ–¥—Ü—ã_ üí™üèº _–¢–µ–ø–µ—Ä—å —Ñ–æ—Ç–æ!_', parse_mode="Markdown", )
                        bot.send_photo(message.chat.id,
                                       'AgACAgIAAxkBAAIDx2SQiHX4ValhuzyMmUqnn437dNc3AAJmzTEbaTaJSM6bNYh4O6hNAQADAgADeQADLwQ',
                                       caption='_–£—Ö —Ç—ã, –≤–æ—Ç —ç—Ç–æ –¥–∞–∞–∞! –°–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫–∞—è —Å—á–∞—Å—Ç–ª–∏–≤–∞—è —Å–µ–º—å—è‚ù§Ô∏è '
                                               '–í—ã —Å–≤–æ–µ–≥–æ —Ä–æ–¥–∞ —Ç–æ–∂–µ —Å–µ–º—å—è, –≤–µ–¥—å –∑–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç–µ –≤–º–µ—Å—Ç–µ!\n'
                                               '\n'
                                               '–ê —Å–º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫–æ–µ –∂–µ —Ñ–æ—Ç–æ? –¢–æ–ª—å–∫–æ –Ω–µ —Ç—Ä–æ–≥–∞–π—Ç–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—å, '
                                               '–æ–Ω –∏ —Ç–∞–∫ —Å—Ç–∞—Ä–µ–Ω—å–∫–∏–π —É–∂–µ —Å–æ–≤—Å–µ–º_ üòÖ', parse_mode="Markdown"
                                       )
                        bot.register_next_step_handler(message, question_4_photo)
                    else:
                        bot.register_next_step_handler(message, question_4_end)
            elif message.text.lower() in ['ford', 'ford model a', '—Ñ–æ—Ä–¥', '—Ñ–æ—Ä–¥ –º–æ–¥–µ–ª –∞']:
                if check_answer(message.chat, 'question_answer', "answer_4"):
                    bot.send_message(message.chat.id,
                                     '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                     parse_mode="Markdown", )
                    bot.register_next_step_handler(message, question_4_end)
                else:
                    bot.send_message(message.chat.id,
                                     '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è!',
                                     parse_mode="Markdown", )
                    change_answer(message.chat, 'question_answer', "answer_4")
                    if check_answer_final(message.chat, 'question_answer'):
                        bot.send_message(message.chat.id,
                                         '_–ú–æ–ª–æ–¥—Ü—ã_ üí™üèº _–¢–µ–ø–µ—Ä—å —Ñ–æ—Ç–æ!_', parse_mode="Markdown", )
                        bot.send_photo(message.chat.id,
                                       'AgACAgIAAxkBAAIDx2SQiHX4ValhuzyMmUqnn437dNc3AAJmzTEbaTaJSM6bNYh4O6hNAQADAgADeQADLwQ',
                                       caption='_–£—Ö —Ç—ã, –≤–æ—Ç —ç—Ç–æ –¥–∞–∞–∞! –°–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫–∞—è —Å—á–∞—Å—Ç–ª–∏–≤–∞—è —Å–µ–º—å—è‚ù§Ô∏è '
                                               '–í—ã —Å–≤–æ–µ–≥–æ —Ä–æ–¥–∞ —Ç–æ–∂–µ —Å–µ–º—å—è, –≤–µ–¥—å –∑–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç–µ –≤–º–µ—Å—Ç–µ!\n'
                                               '\n'
                                               '–ê —Å–º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫–æ–µ –∂–µ —Ñ–æ—Ç–æ? –¢–æ–ª—å–∫–æ –Ω–µ —Ç—Ä–æ–≥–∞–π—Ç–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—å, '
                                               '–æ–Ω –∏ —Ç–∞–∫ —Å—Ç–∞—Ä–µ–Ω—å–∫–∏–π —É–∂–µ —Å–æ–≤—Å–µ–º_ üòÖ',parse_mode="Markdown")
                        bot.register_next_step_handler(message, question_4_photo)
                    else:
                        bot.register_next_step_handler(message, question_4_end)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                                 parse_mode="Markdown")
                bot.register_next_step_handler(message, question_4_end)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_4_end: {error}')
        bot.register_next_step_handler(message, question_4_end)


def question_4_photo(message):
    try:
        if check_end_time(message.chat):
            if message.content_type == 'photo':
                keyboard_inline = types.InlineKeyboardMarkup()
                confirm_button = types.InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='confirm')
                cancel_button = types.InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='cancel')
                keyboard_inline.row(confirm_button, cancel_button)
                bot.send_photo(admin_id, message.photo[-1].file_id,
                               caption=f'–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É —ç—Ç–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è "{message.chat.title}":\n'
                                       f'\n'
                                       f'–ó–∞–¥–∞–Ω–∏–µ 4 (—Å–±–æ—Ä –æ—Ç–≤–µ—Ç–æ–≤):\n'
                                       f'\n'
                                       f'[ {message.chat} ]'
                                       f'#question_4#',
                               reply_markup=keyboard_inline)

                @bot.callback_query_handler(func=lambda call: True)
                def callback_handler(call):
                    text = call.message.caption
                    match = re.search(r'\[(.*?)\]', text)
                    question = re.search(r'\#(.*?)\#', text)
                    text = match.group(1).replace("'", "\"")
                    text_end = text.replace("None", "null")
                    value = json.loads(text_end)
                    chat = types.Chat.de_json(value)
                    if call.data == 'confirm':
                        end_question_at(chat, question.group(1))
                        bot.send_message(call.from_user.id, f'–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ —É \"{chat.title}\"')
                        bot.delete_message(call.from_user.id, call.message.id)
                        bot.send_message(chat.id, '–•–º, —É–≤–µ—Ä–µ–Ω —ç—Ç–æ —Ñ–æ—Ç–æ –æ—Ü–µ–Ω—è—Ç –ø–æ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤—É.\n–û—Ç–∫—Ä—ã–≤–∞–π –º–µ–Ω—é, '
                                                  '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ üëçüèº', reply_markup=keyboard.keyboard(chat))
                        if check_final(chat):
                            end_at(chat)
                            bot.send_sticker(chat.id,
                                             'CAACAgIAAxkBAAEJWLJkjZnnq-9Z6FIKDa7Sjzjv2udGTgACaS8AAmjYaUgPYCMFmg1OtC8E')
                            bot.send_message(chat.id, '–í–∞—É! ü•≥ü•≥ü•≥\n'
                                                      '\n'
                                                      '–Ø –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ —Ö–æ—Ä–æ—à–æ –≤—ã —Ä–∞–∑–±–∏—Ä–∞–µ—Ç–µ—Å—å –≤ –∞–≤—Ç–æ–º–æ–±–∏–ª—è—Ö.'
                                                      '–ù–µ –∫–∞–∂–¥—ã–π —Å–º–æ–≥ –±—ã –ø—Ä–æ–π—Ç–∏ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã. '
                                                      '–ï—â—ë –∏ –≤–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∞–ø–ª–æ–¥–∏—Ä—É—é —Å—Ç–æ—è.\n'
                                                      '\n'
                                                      '–°–∫–æ—Ä–æ –≤–µ–¥—É—â–∏–π –æ–±—ä—è–≤–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã, –∞ –≤—ã –ø–æ–∫–∞ –º–æ–∂–µ—Ç–µ '
                                                      '–µ—â—ë –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –≤—ã—Å—Ç–∞–≤–∫–æ–π\n'
                                                      '‚ù§Ô∏è', reply_markup=None)
                    elif call.data == 'cancel':
                        bot.send_message(chat.id, '–•–º.. –¥–∞—é –µ—â—ë —à–∞–Ω—Å üòä')
                        bot.delete_message(call.from_user.id, call.message.id)
                        bot.send_message(call.from_user.id, f'–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ —É \"{chat.title}\"')
                        bot.register_next_step_handler(message, question_4_photo)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                                 parse_mode="Markdown")
                bot.register_next_step_handler(message, question_4_photo)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_4_photo: {error}')
        bot.register_next_step_handler(message, question_4_photo)


# -------------–í–æ–ø—Ä–æ—Å 5---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–≤–æ–ø—Ä–æ—Å 5', content_types=['text'])
def question_5(message):
    try:
        if check_end_time(message.chat):
            start_question_at(message.chat, 'question_5')
            bot.send_message(message.chat.id,
                             '_–£—Ö —Ç—ã, –≤–æ—Ç —ç—Ç–æ –¥–∞–∞–∞! –°–º–æ—Ç—Ä–∏—Ç–µ, –∫–∞–∫–∞—è —Å—á–∞—Å—Ç–ª–∏–≤–∞—è —Å–µ–º—å—è_‚ù§Ô∏è _–í—ã —Å–≤–æ–µ–≥–æ —Ä–æ–¥–∞ —Ç–æ–∂–µ —Å–µ–º—å—è, '
                             '–≤–µ–¥—å –∑–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç–µ –≤–º–µ—Å—Ç–µ!_\n'
                             '\n'
                             '_–í–æ–∑—å–º–∏—Ç–µ –∏–∑ –±–∞—Ä–¥–∞—á–∫–∞ –∑–∞–ø–∏—Å–∫—É, –Ω–∞ –Ω–µ–π –±—ã–≤—à–∏–π –≤–ª–∞–¥–µ–ª–µ—Ü –æ—Å—Ç–∞–≤–∏–ª –≤–∞–º –ø–æ–¥—Å–∫–∞–∑–∫—É, '
                             '—á—Ç–æ –∂–µ —ç—Ç–æ –∑–∞ –º–∞—à–∏–Ω–∞._', parse_mode="Markdown", )
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAIDyWSQv95ZYo66Mic38g0txl0Of-OIAAKGzjEbaTaJSG9pCihb0tX5AQADAgADeQADLwQ')
            bot.register_next_step_handler(message, question_5_end)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_5: {error}')
        bot.register_next_step_handler(message, question_5)


def question_5_end(message):
    try:
        if check_end_time(message.chat):
            if message.text.lower() in ["–≥–∞–∑13", "–≥–∞–∑-13", "–≥–∞–∑ 13", "—á–∞–π–∫–∞", "–≤–æ–ª–≥–∞"]:

                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIDymSQwBJDGXvY7p9TN0sPpOrbdeeoAAKIzjEbaTaJSFs4a-DLnZuzAQADAgADeQADLwQ',
                               caption='_–ú–æ–ª–æ–¥—Ü—ã. –°–æ—Ñ–∏ –õ–æ—Ä–µ–Ω —Å—Ñ–æ—Ç–∫–∞–ª–∞—Å—å –∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ. –¢–æ–ª—å–∫–æ –≤–∞–º –Ω–∞–¥–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å, '
                                       '—É—Å–ø–µ—Ö–æ–≤!_', parse_mode="Markdown", )
                bot.register_next_step_handler(message, question_5_photo)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                                 parse_mode="Markdown")
                bot.register_next_step_handler(message, question_5_end)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_5_end: {error}')
        bot.register_next_step_handler(message, question_5_end)


def question_5_photo(message):
    try:
        if check_end_time(message.chat):
            if message.content_type == 'photo':
                keyboard_inline = types.InlineKeyboardMarkup()
                confirm_button = types.InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='confirm')
                cancel_button = types.InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='cancel')
                keyboard_inline.row(confirm_button, cancel_button)
                bot.send_photo(admin_id, message.photo[-1].file_id,
                               caption=f'–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É —ç—Ç–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è "{message.chat.title}":\n'
                                       f'\n'
                                       f'–ó–∞–¥–∞–Ω–∏–µ 5 (–≥–∞–∑13):\n'
                                       f'\n'
                                       f'[ {message.chat} ]'
                                       f'#question_5#',
                               reply_markup=keyboard_inline)

                @bot.callback_query_handler(func=lambda call: True)
                def callback_handler(call):
                    text = call.message.caption
                    match = re.search(r'\[(.*?)\]', text)
                    question = re.search(r'\#(.*?)\#', text)
                    text = match.group(1).replace("'", "\"")
                    text_end = text.replace("None", "null")
                    value = json.loads(text_end)
                    chat = types.Chat.de_json(value)
                    if call.data == 'confirm':
                        end_question_at(chat, question.group(1))
                        bot.send_message(call.from_user.id, f'–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ —É \"{chat.title}\"')
                        bot.delete_message(call.from_user.id, call.message.id)
                        bot.send_message(chat.id, '–•–º, —É–≤–µ—Ä–µ–Ω —ç—Ç–æ —Ñ–æ—Ç–æ –æ—Ü–µ–Ω—è—Ç –ø–æ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤—É.\n–û—Ç–∫—Ä—ã–≤–∞–π –º–µ–Ω—é, '
                                                  '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ üëçüèº', reply_markup=keyboard.keyboard(chat))
                        if check_final(chat):
                            end_at(chat)
                            bot.send_sticker(chat.id,
                                             'CAACAgIAAxkBAAEJWLJkjZnnq-9Z6FIKDa7Sjzjv2udGTgACaS8AAmjYaUgPYCMFmg1OtC8E')
                            bot.send_message(chat.id, '–í–∞—É! ü•≥ü•≥ü•≥\n'
                                                      '\n'
                                                      '–Ø –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ —Ö–æ—Ä–æ—à–æ –≤—ã —Ä–∞–∑–±–∏—Ä–∞–µ—Ç–µ—Å—å –≤ –∞–≤—Ç–æ–º–æ–±–∏–ª—è—Ö.'
                                                      '–ù–µ –∫–∞–∂–¥—ã–π —Å–º–æ–≥ –±—ã –ø—Ä–æ–π—Ç–∏ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã. '
                                                      '–ï—â—ë –∏ –≤–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∞–ø–ª–æ–¥–∏—Ä—É—é —Å—Ç–æ—è.\n'
                                                      '\n'
                                                      '–°–∫–æ—Ä–æ –≤–µ–¥—É—â–∏–π –æ–±—ä—è–≤–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã, –∞ –≤—ã –ø–æ–∫–∞ –º–æ–∂–µ—Ç–µ '
                                                      '–µ—â—ë –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –≤—ã—Å—Ç–∞–≤–∫–æ–π\n'
                                                      '‚ù§Ô∏è', reply_markup=None)
                    elif call.data == 'cancel':
                        bot.send_message(chat.id, '–•–º.. –¥–∞—é –µ—â—ë —à–∞–Ω—Å üòä')
                        bot.delete_message(call.from_user.id, call.message.id)
                        bot.send_message(call.from_user.id, f'–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ —É \"{chat.title}\"')
                        bot.register_next_step_handler(message, question_5_photo)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                                 parse_mode="Markdown")
                bot.register_next_step_handler(message, question_5_photo)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_5_photo: {error}')
        bot.register_next_step_handler(message, question_5_photo)


# -------------–í–æ–ø—Ä–æ—Å 6---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–≤–æ–ø—Ä–æ—Å 6', content_types=['text'])
def question_6(message):
    try:
        if check_end_time(message.chat):
            start_question_at(message.chat, 'question_6')
            bot.send_message(message.chat.id,
                             '_–ö—Ç–æ-—Ç–æ –º–∏–ª–æ–≥–æ —Å–ø–æ—Å–æ–±–µ–Ω —É–∑–Ω–∞—Ç—å –ø–æ –ø–æ—Ö–æ–¥–∫–µ, –Ω—É –º—ã —Å –≤–∞–º–∏ –ª–µ–≥–∫–æ –æ—Ç–≥–∞–¥–∞–µ–º –º–∞—à–∏–Ω—É –¥–∞–∂–µ —Å '
                             '–∑–∞–∫—Ä—ã—Ç—ã–º–∏ –≥–ª–∞–∑–∞–º–∏! –ù—É –ª–∞–¥–Ω–æ‚Ä¶ —Å —Å–∏–ª—É—ç—Ç–æ–º –º–∞—à–∏–Ω—ã  –±—É–¥–µ—Ç, –ø–æ–∂–∞–ª—É–π, –ø—Ä–æ—â–µ._'
                             , parse_mode="Markdown", )
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAIDy2SQwUHg1w_qRzHRgRHNj1-CdP1nAAKNzjEbaTaJSGawCC0rmviPAQADAgADeAADLwQ',
                           caption='üöô _–ù–∞–ø–∏—à–∏—Ç–µ –º–∞—Ä–∫—É –º–∞—à–∏–Ω—ã, –∫–æ—Ç–æ—Ä—É—é –º—ã —Å–∫—Ä—ã–ª–∏_', parse_mode="Markdown")
            bot.register_next_step_handler(message, question_6_1)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_6: {error}')
        bot.register_next_step_handler(message, question_6)


def question_6_1(message):
    try:
        if check_end_time(message.chat):
            if message.text.lower() in ["–∞—Å—Ç–æ–Ω –º–∞—Ä—Ç–∏–Ω", "–∞—Å—Ç–æ–Ω–º–∞—Ä—Ç–∏–Ω", "aston martin", "astonmartin"]:
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIDz2SQw3EieP4bX6tYzSAbYuaBppPwAAIUyDEbGVaISDuWpytb4seHAQADAgADeQADLwQ')
                bot.send_message(message.chat.id,
                                 '_–°—É–ø–µ—Ä, –¥–µ—Ä–∂–∏—Ç–µ –µ—â–µ –º–∞—à–∏–Ω—É. _'
                                 , parse_mode="Markdown", )
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIDzWSQwjVRhYROr5yFyTcdN1D7hxyuAAKQzjEbaTaJSEvie_tfbnCaAQADAgADeQADLwQ')
                bot.register_next_step_handler(message, question_6_2)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                                 parse_mode="Markdown")
                bot.register_next_step_handler(message, question_6_1)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_6_1: {error}')
        bot.register_next_step_handler(message, question_6_1)


def question_6_2(message):
    try:
        if check_end_time(message.chat):
            if message.text.lower() in ["–∞–ª—å—Ñ–∞ —Ä–æ–º–µ–æ", "–∞–ª—å—Ñ–∞—Ä–æ–º–µ–æ", "alfa romeo", "alfaromeo"]:
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAID0GSQw7aRqDzlQcHSSQ0zWVW2Bk7MAAIVyDEbGVaISLT166vZBHvKAQADAgADbQADLwQ')
                bot.send_message(message.chat.id,
                                 '_–°—É–ø–µ—Ä, –¥–µ—Ä–∂–∏—Ç–µ –µ—â–µ –º–∞—à–∏–Ω—É._'
                                 , parse_mode="Markdown", )
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIDzmSQwpyPpjcPgNBo9YbM_kLEERsFAAITyDEbGVaISFG-dv9yUayPAQADAgADeQADLwQ')
                bot.register_next_step_handler(message, question_6_end)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                                 parse_mode="Markdown")
                bot.register_next_step_handler(message, question_6_2)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_6_2: {error}')
        bot.register_next_step_handler(message, question_6_2)


def question_6_end(message):
    try:
        if check_end_time(message.chat):
            if message.text.lower() in ["aurus", "–∞—É—Ä—É—Å", "–∞—É—Ä—É—Å —Å–µ–Ω–∞—Ç", "aurus senat"]:
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAID0WSQxAQ597I8kZRtNdjyp5y6RksUAAIWyDEbGVaISPotVq15ct0TAQADAgADeQADLwQ',
                               )
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAID0mSQxEMQMRoyTdhlgZikmZHjLIDqAAIXyDEbGVaISCfYIT-rtZFSAQADAgADeQADLwQ',
                               caption='_–ú–æ–ª–æ–¥—Ü—ã. '
                                       '–ù—É_‚Ä¶_–Ω–µ –∑–Ω–∞—é –∫–∞–∫ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–≤—Ç–æ—Ä—è—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ —Ñ–æ—Ç–æ üòÇ –í–æ—Ç –∏ –ø—Ä–æ–≤–µ—Ä–∏–º, '
                                       '–Ω–∞ —á—Ç–æ —Å–ø–æ—Å–æ–±–Ω–∞ –≤–∞—à–∞ —Ñ–∞–Ω—Ç–∞–∑–∏—è!_'
                               , parse_mode="Markdown"
                               )
                bot.register_next_step_handler(message, question_6_photo)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                                 parse_mode="Markdown")
                bot.register_next_step_handler(message, question_6_end)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_6_end: {error}')
        bot.register_next_step_handler(message, question_6_end)


def question_6_photo(message):
    try:
        if check_end_time(message.chat):
            if message.content_type == 'photo':
                keyboard_inline = types.InlineKeyboardMarkup()
                confirm_button = types.InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='confirm')
                cancel_button = types.InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='cancel')
                keyboard_inline.row(confirm_button, cancel_button)
                bot.send_photo(admin_id, message.photo[-1].file_id,
                               caption=f'–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É —ç—Ç–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è "{message.chat.title}":\n'
                                       f'\n'
                                       f'–ó–∞–¥–∞–Ω–∏–µ 6 (–°–∏–ª—É—ç—Ç—ã):\n'
                                       f'\n'
                                       f'[ {message.chat} ]'
                                       f'#question_6#',
                               reply_markup=keyboard_inline)

                @bot.callback_query_handler(func=lambda call: True)
                def callback_handler(call):
                    text = call.message.caption
                    match = re.search(r'\[(.*?)\]', text)
                    question = re.search(r'\#(.*?)\#', text)
                    text = match.group(1).replace("'", "\"")
                    text_end = text.replace("None", "null")
                    value = json.loads(text_end)
                    chat = types.Chat.de_json(value)
                    if call.data == 'confirm':
                        end_question_at(chat, question.group(1))
                        bot.send_message(call.from_user.id, f'–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ —É \"{chat.title}\"')
                        bot.delete_message(call.from_user.id, call.message.id)
                        bot.send_message(chat.id, '–•–º, —É–≤–µ—Ä–µ–Ω —ç—Ç–æ —Ñ–æ—Ç–æ –æ—Ü–µ–Ω—è—Ç –ø–æ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤—É.\n–û—Ç–∫—Ä—ã–≤–∞–π –º–µ–Ω—é, '
                                                  '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ üëçüèº', reply_markup=keyboard.keyboard(chat))
                        if check_final(chat):
                            end_at(chat)
                            bot.send_sticker(chat.id,
                                             'CAACAgIAAxkBAAEJWLJkjZnnq-9Z6FIKDa7Sjzjv2udGTgACaS8AAmjYaUgPYCMFmg1OtC8E')
                            bot.send_message(chat.id, '–í–∞—É! ü•≥ü•≥ü•≥\n'
                                                      '\n'
                                                      '–Ø –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ —Ö–æ—Ä–æ—à–æ –≤—ã —Ä–∞–∑–±–∏—Ä–∞–µ—Ç–µ—Å—å –≤ –∞–≤—Ç–æ–º–æ–±–∏–ª—è—Ö.'
                                                      '–ù–µ –∫–∞–∂–¥—ã–π —Å–º–æ–≥ –±—ã –ø—Ä–æ–π—Ç–∏ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã. '
                                                      '–ï—â—ë –∏ –≤–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∞–ø–ª–æ–¥–∏—Ä—É—é —Å—Ç–æ—è.\n'
                                                      '\n'
                                                      '–°–∫–æ—Ä–æ –≤–µ–¥—É—â–∏–π –æ–±—ä—è–≤–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã, –∞ –≤—ã –ø–æ–∫–∞ –º–æ–∂–µ—Ç–µ '
                                                      '–µ—â—ë –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –≤—ã—Å—Ç–∞–≤–∫–æ–π\n'
                                                      '‚ù§Ô∏è', reply_markup=None)
                    elif call.data == 'cancel':
                        bot.send_message(chat.id, '–•–º.. –¥–∞—é –µ—â—ë —à–∞–Ω—Å üòä')
                        bot.delete_message(call.from_user.id, call.message.id)
                        bot.send_message(call.from_user.id, f'–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ —É \"{chat.title}\"')
                        bot.register_next_step_handler(message, question_6_photo)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                                 parse_mode="Markdown")
                bot.register_next_step_handler(message, question_6_photo)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_6_photo: {error}')
        bot.register_next_step_handler(message, question_6_photo)


# -------------–í–æ–ø—Ä–æ—Å 7*---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–≤–æ–ø—Ä–æ—Å 7', content_types=['text'])
def question_7(message):
    try:
        if check_end_time(message.chat):
            start_question_at(message.chat, 'question_7')
            bot.send_message(message.chat.id,
                             '_–ß–∞—Å—Ç–æ –≤ —Å–µ—Ä–≤–∏—Å–Ω—ã—Ö —Ü–µ–Ω—Ç—Ä–∞—Ö –≤–æ–¥–∏—Ç–µ–ª–∏ –Ω–µ –º–æ–≥—É—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ –æ–±—ä—è—Å–Ω–∏—Ç—å, —á—Ç–æ —É –Ω–∏—Ö '
                             '–∑–∞ –ø–æ–ª–æ–º–∫–∞._\n'
                             '\n'
                             'üöô _–ü–æ –æ–ø–∏—Å–∞–Ω–∏—è–º —Ç–∞–∫–∏—Ö –≤–æ–¥–∏—Ç–µ–ª–µ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–Ω—è—Ç—å, —á—Ç–æ —É –Ω–∏—Ö —Å–ª–æ–º–∞–ª–æ—Å—å –∏ –ø—Ä–∏—Å–ª–∞—Ç—å '
                             '—Å—Ç–∏–∫–µ—Ä –¥–µ—Ç–∞–ª–∏, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –ø–æ—á–∏–Ω–∏—Ç—å._'
                             , parse_mode="Markdown", )
            bot.send_sticker(message.chat.id,
                             'CAACAgIAAxkBAAEJWLRkjZpdhGap32r3QBh7xTfAKbc_twAC9TAAAhP4aUjeuMcerREJFi8E')
            bot.send_message(message.chat.id,
                             '_–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Å—Ç–∏–∫–µ—Ä–ø–∞–∫_'
                             , parse_mode="Markdown", )
            bot.send_voice(message.chat.id, 'AwACAgQAAxkBAAIHwGSTSizZF-5u9SPVT6VIXc8Rg5DuAAJXSQACc9WZUG_M1CeDDtNdLwQ')
            bot.register_next_step_handler(message, question_7_1)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_7: {error}')
        bot.register_next_step_handler(message, question_5)


def question_7_1(message):
    try:
        if check_end_time(message.chat):
            if message.sticker.emoji == "2Ô∏è‚É£" and message.sticker.set_name == 'Vysshaya_peredacha':
                bot.send_message(message.chat.id,
                                 '_–ö–æ–Ω–µ—á–Ω–æ —ç—Ç–æ —Å–∫—Ä–∏–ø—è—Ç –∫–æ–ª–æ–¥–∫–∏. –ü–æ—Å–º–æ—Ç—Ä–∏–º –∫–∞–∫–∏–µ –ø–æ–ª–æ–º–∫–∏ —É –æ—Å—Ç–∞–ª—å–Ω—ã—Ö. _'
                                 , parse_mode="Markdown", )
                bot.send_voice(message.chat.id,
                               'AwACAgQAAxkBAAIHwWSTTVaY460iNn-npAYC_rG4iZz6AAKCSgACc9WZUAABt0avhcJiQy8E')

                bot.register_next_step_handler(message, question_7_2)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                                 parse_mode="Markdown")
                bot.register_next_step_handler(message, question_7_1)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_7_1: {error}')
        bot.register_next_step_handler(message, question_7_1)


def question_7_2(message):
    try:
        if check_end_time(message.chat):
            if message.sticker.emoji == "1Ô∏è‚É£" and message.sticker.set_name == 'Vysshaya_peredacha':
                bot.send_message(message.chat.id,
                                 '_–î–∞, –∑–¥–µ—Å—å —è–≤–Ω–æ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ —Å—Ç–∞—Ä—Ç–µ—Ä–æ–º. –ß—Ç–æ —Ç–∞–º –µ—â–µ  —Å–ª–æ–º–∞–ª–æ—Å—å —É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞?_'
                                 , parse_mode="Markdown", )
                bot.send_voice(message.chat.id,
                               'AwACAgQAAxkBAAIHwmSTTu3EsrAlXNWRCrplseP8HqvnAAIESwACc9WZUMa-tgABcpUYDC8E')
                bot.register_next_step_handler(message, question_7_3)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                                 parse_mode="Markdown")
                bot.register_next_step_handler(message, question_7_2)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_7_2: {error}')
        bot.register_next_step_handler(message, question_7_2)


def question_7_3(message):
    try:
        if check_end_time(message.chat):
            if message.sticker.emoji == "3Ô∏è‚É£" and message.sticker.set_name == 'Vysshaya_peredacha':
                bot.send_message(message.chat.id,
                                 "_–î–∞, —Ç—É—Ç, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–æ–∫–ª–∞–¥–∫–æ–π –≥–æ–ª–æ–≤–∫–∏ —Ü–∏–ª–∏–Ω–¥—Ä–∞.\n"
                                 "–ú–æ–ª–æ–¥—Ü—ã, –≤—ã –ø–æ–º–æ–≥–ª–∏ –≤—Å–µ–º_ü§ù", parse_mode="Markdown", )
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIGwGSTKWTdTORi8lwAARIv3cwDWBYybQACY8oxG7TXmEiNs9zD0vJ5hgEAAwIAA3kAAy8E')
                bot.send_photo(message.chat.id,
                               'AgACAgIAAxkBAAIGwWSTKXdVxrW3cbCZVVtdCISbSQKIAAJkyjEbtNeYSE_zi2tOUAZXAQADAgADeQADLwQ',
                               caption="_–ö—Å—Ç–∞—Ç–∏, –∫–∞–∫ –≤—ã –¥—É–º–∞–µ—Ç–µ, –º–æ–≥–ª–∏ –ª–∏ —Ç–∞–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å —É –≤–ª–∞–¥–µ–ª—å—Ü–∞ "
                                       "—É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –≤ —Å–≤–æ–µ–º —Ä–æ–¥–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è? –í–µ–¥—å ZIBAR-MK 2 —ç—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –≤–µ–∑–¥–µ—Ö–æ–¥, "
                                       "–∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–∞–∂–µ –∂–∞—Ä—É –≤ +55 –∏ –º–æ–∂–µ—Ç –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥ "
                                       "–ª—é–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è.–ß–µ–º-—Ç–æ –¥–∞–∂–µ –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç –º–∞—à–∏–Ω—É –ë—ç—Ç–º–µ–Ω–∞. –í–æ—Ç –≤–∞–º —Ñ–æ—Ç–æ —ç—Ç–æ–≥–æ "
                                       "–≤–µ–∑–¥–µ—Ö–æ–¥–∞ –∏ –ë—ç—Ç–º–µ–Ω–∞ —Å –µ–≥–æ –±—ç–º–æ–±–∏–ª–µ–º. –°–¥–µ–ª–∞–π—Ç–µ —Å –Ω–∏–º —Ç–∞–∫–æ–µ –∂–µ —Ñ–æ—Ç–æ, –∫–∞–∫ "
                                       "–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—É–ø–µ—Ä–≥–µ—Ä–æ–π. –ö—Å—Ç–∞—Ç–∏, —á–µ–º –±–æ–ª—å—à–µ –≤–∞—Å –±—É–¥–µ—Ç –Ω–∞ —Ñ–æ—Ç–æ, —Ç–µ–º –ª—É—á—à–µ._"
                               , parse_mode="Markdown")
                bot.register_next_step_handler(message, question_7_photo)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                                 parse_mode="Markdown")
                bot.register_next_step_handler(message, question_7_3)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_7_3: {error}')
        bot.register_next_step_handler(message, question_7_3)


def question_7_photo(message):
    try:
        if check_end_time(message.chat):
            if message.content_type == 'photo':
                keyboard_inline = types.InlineKeyboardMarkup()
                confirm_button = types.InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='confirm')
                cancel_button = types.InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='cancel')
                keyboard_inline.row(confirm_button, cancel_button)
                bot.send_photo(admin_id, message.photo[-1].file_id,
                               caption=f'–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É —ç—Ç–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è "{message.chat.title}":\n'
                                       f'\n'
                                       f'–ó–∞–¥–∞–Ω–∏–µ 7 (–ü–æ–ª–æ–º–∫–∏):\n'
                                       f'\n'
                                       f'[ {message.chat} ]'
                                       f'#question_7#',
                               reply_markup=keyboard_inline)

                @bot.callback_query_handler(func=lambda call: True)
                def callback_handler(call):
                    text = call.message.caption
                    match = re.search(r'\[(.*?)\]', text)
                    question = re.search(r'\#(.*?)\#', text)
                    text = match.group(1).replace("'", "\"")
                    text_end = text.replace("None", "null")
                    value = json.loads(text_end)
                    chat = types.Chat.de_json(value)
                    if call.data == 'confirm':
                        end_question_at(chat, question.group(1))
                        bot.send_message(call.from_user.id, f'–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ —É \"{chat.title}\"')
                        bot.delete_message(call.from_user.id, call.message.id)
                        bot.send_message(chat.id, '–•–º, —É–≤–µ—Ä–µ–Ω —ç—Ç–æ —Ñ–æ—Ç–æ –æ—Ü–µ–Ω—è—Ç –ø–æ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤—É.\n–û—Ç–∫—Ä—ã–≤–∞–π –º–µ–Ω—é, '
                                                  '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ üëçüèº', reply_markup=keyboard.keyboard(chat))
                        if check_final(chat):
                            end_at(chat)
                            bot.send_sticker(chat.id,
                                             'CAACAgIAAxkBAAEJWLJkjZnnq-9Z6FIKDa7Sjzjv2udGTgACaS8AAmjYaUgPYCMFmg1OtC8E')
                            bot.send_message(chat.id, '_–í–∞—É! –Ø –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ —Ö–æ—Ä–æ—à–æ –≤—ã —Ä–∞–∑–±–∏—Ä–∞–µ—Ç–µ—Å—å –≤ '
                                                      '–∞–≤—Ç–æ–º–æ–±–∏–ª—è—Ö.–ù–µ –∫–∞–∂–¥—ã–π —Å–º–æ–≥ –±—ã –ø—Ä–æ–π—Ç–∏ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –∏ '
                                                      '–æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã. –ï—â–µ –∏ –≤–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∞–ø–ª–æ–¥–∏—Ä—É—é '
                                                      '—Å—Ç–æ—è. –°–∫–æ—Ä–æ –≤–µ–¥—É—â–∏–π –æ–±—ä—è–≤–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã, –∞ –≤—ã –ø–æ–∫–∞ '
                                                      '–º–æ–∂–µ—Ç–µ –µ—â–µ –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –≤—ã—Å—Ç–∞–≤–∫–æ–π._', reply_markup=None)
                    elif call.data == 'cancel':
                        bot.send_message(chat.id, '–•–º.. –¥–∞—é –µ—â—ë —à–∞–Ω—Å üòä')
                        bot.delete_message(call.from_user.id, call.message.id)
                        bot.send_message(call.from_user.id, f'–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ —É \"{chat.title}\"')
                        bot.register_next_step_handler(message, question_7_photo)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                                 parse_mode="Markdown")
                bot.register_next_step_handler(message, question_7_photo)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_7_photo: {error}')
        bot.register_next_step_handler(message, question_7_photo)


# -------------–í–æ–ø—Ä–æ—Å 8*---------------------------
@bot.message_handler(func=lambda message: message.text.lower() == '–≤–æ–ø—Ä–æ—Å 8', content_types=['text'])
def question_8(message):
    try:
        if check_end_time(message.chat):
            start_question_at(message.chat, 'question_8')
            bot.send_message(message.chat.id,
                             '_–ù–∏–∫–æ–ª–∞–π, –ê—Ä—Å–µ–Ω–∏–π, –ò–≤–∞–Ω –∏ –Ø–Ω —Å–æ–±—Ä–∞–ª–∏—Å—å –ø–æ–∫—É–ø–∞—Ç—å —Å–µ–±–µ –º–∞—à–∏–Ω—ã —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å –ê–≤–∏—Ç–æ. '
                             '–£ –∫–∞–∂–¥–æ–≥–æ –∏–∑ –Ω–∏—Ö –µ—Å—Ç—å –ø–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ –º–∞—Ä–∫–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è, —Ü–≤–µ—Ç—É –∏ —Ü–µ–Ω–µ, –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ '
                             '—Å –∏—Ö –≤–æ–∑—Ä–∞—Å—Ç–æ–º. –î–∞–≤–∞–π—Ç–µ —É–∑–Ω–∞–µ–º, –∫—Ç–æ –∂–µ, —á—Ç–æ —Å–µ–±–µ —Ö–æ—á–µ—Ç –∫—É–ø–∏—Ç—å. _'
                             , parse_mode="Markdown", )
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAID3WSQyynG8xF1VeKkscm2cnl95Y-qAAK0zjEbaTaJSESysD0NqZZSAQADAgADeQADLwQ')
            bot.send_photo(message.chat.id,
                           'AgACAgIAAxkBAAID3mSQyzxNLh3TzGJgKvmyAnSQ7cDAAAK1zjEbaTaJSFnQNIemhmjaAQADAgADeQADLwQ')
            bot.send_message(message.chat.id,
                             '–°–æ–ø–æ—Å—Ç–∞–≤—å—Ç–µ –≤—Å–µ —Ñ–∞–∫—Ç—ã –∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –±—É–¥—É—â–∏—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –∞–≤—Ç–æ!\n'
                             '\n'
                             'üöô _–û–¥–∏–Ω –æ—Ç–≤–µ—Ç = –æ–¥–∏–Ω –∞–≤—Ç–æ–≤–ª–∞–¥–µ–ª–µ—Ü. –ü—Ä–∏–º–µ—Ä: –ù–∏–∫–æ–ª–∞–π-–º–∞—à–∏–Ω–∞_'
                             , parse_mode="Markdown", )
            bot.register_next_step_handler(message, question_8_end)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_8: {error}')
        bot.register_next_step_handler(message, question_8)


def question_8_end(message):
    try:
        if check_end_time(message.chat):
            if message.text.lower() in ['–Ω–∏–∫–æ–ª–∞–π-–¥–µ–≤—è—Ç–∫–∞']:
                if check_answer(message.chat, 'question_answer_end', "answer_1"):
                    bot.send_message(message.chat.id,
                                     '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                     parse_mode="Markdown", )
                    bot.register_next_step_handler(message, question_8_end)
                else:
                    bot.send_message(message.chat.id,
                                     '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è!',
                                     parse_mode="Markdown", )
                    change_answer(message.chat, 'question_answer_end', "answer_1")
                    if check_answer_final(message.chat, 'question_answer_end'):
                        bot.send_message(message.chat.id,
                                         '_–ú–æ–ª–æ–¥—Ü—ã. –¢–∞–∫, —ç—Ç–æ —Å–∞–ª–æ–Ω –ú–∞–π–±–∞—Ö–∞, –µ—Å–ª–∏ —á—Ç–æ. –ù–∞–ø–æ–º–∏–Ω–∞—é, –Ω–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äì –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —Ñ–æ—Ç–æ. –¢—Ä–æ–≥–∞—Ç—å –º–∞—à–∏–Ω—É –Ω–µ–ª—å–∑—è, –Ω–æ –≤—ã –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ö–æ—Ç—è –±—ã —Ä–∞–∫—É—Ä—Å –ø–æ—Ö–æ–∂–∏–π) –£ –≤–∞—Å –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è!_',
                                         parse_mode="Markdown", )
                        bot.send_photo(message.chat.id,
                                       'AgACAgIAAxkBAAID32SQzbW7N8Hy25H21op_h3nuKSyTAAK5zjEbaTaJSMChYhqcuio8AQADAgADeQADLwQ')
                        bot.register_next_step_handler(message, question_8_photo)
                    else:
                        bot.register_next_step_handler(message, question_8_end)
            elif message.text.lower() in ['–∞—Ä—Å–µ–Ω–∏–π-–±–º–≤', '–∞—Ä—Å–µ–Ω–∏–π-bmw']:
                if check_answer(message.chat, 'question_answer_end', "answer_2"):
                    bot.send_message(message.chat.id,
                                     '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                     parse_mode="Markdown", )
                    bot.register_next_step_handler(message, question_8_end)
                else:
                    bot.send_message(message.chat.id,
                                     '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è!',
                                     parse_mode="Markdown", )
                    change_answer(message.chat, 'question_answer_end', "answer_2")
                    if check_answer_final(message.chat, 'question_answer_end'):
                        bot.send_message(message.chat.id,
                                         '_–ú–æ–ª–æ–¥—Ü—ã. –¢–∞–∫, —ç—Ç–æ —Å–∞–ª–æ–Ω –ú–∞–π–±–∞—Ö–∞, –µ—Å–ª–∏ —á—Ç–æ. –ù–∞–ø–æ–º–∏–Ω–∞—é, –Ω–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äì '
                                         '–ø–æ–≤—Ç–æ—Ä–∏—Ç—å —Ñ–æ—Ç–æ. –¢—Ä–æ–≥–∞—Ç—å –º–∞—à–∏–Ω—É –Ω–µ–ª—å–∑—è, –Ω–æ –≤—ã –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ö–æ—Ç—è '
                                         '–±—ã —Ä–∞–∫—É—Ä—Å –ø–æ—Ö–æ–∂–∏–π) –£ –≤–∞—Å –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è!_', parse_mode="Markdown", )
                        bot.send_photo(message.chat.id,
                                       'AgACAgIAAxkBAAID32SQzbW7N8Hy25H21op_h3nuKSyTAAK5zjEbaTaJSMChYhqcuio8AQADAgADeQADLwQ')
                        bot.register_next_step_handler(message, question_8_photo)
                    else:
                        bot.register_next_step_handler(message, question_8_end)
            elif message.text.lower() in ['–∏–≤–∞–Ω-–º–∞–π–±–∞—Ö', '–∏–≤–∞–Ω-maybach']:
                if check_answer(message.chat, 'question_answer_end', "answer_3"):
                    bot.send_message(message.chat.id,
                                     '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                     parse_mode="Markdown", )
                    bot.register_next_step_handler(message, question_8_end)
                else:
                    bot.send_message(message.chat.id,
                                     '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è!',
                                     parse_mode="Markdown", )
                    change_answer(message.chat, 'question_answer_end', "answer_3")
                    if check_answer_final(message.chat, 'question_answer_end'):
                        bot.send_message(message.chat.id,
                                         '_–ú–æ–ª–æ–¥—Ü—ã. –¢–∞–∫, —ç—Ç–æ —Å–∞–ª–æ–Ω –ú–∞–π–±–∞—Ö–∞, –µ—Å–ª–∏ —á—Ç–æ. –ù–∞–ø–æ–º–∏–Ω–∞—é, –Ω–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äì '
                                         '–ø–æ–≤—Ç–æ—Ä–∏—Ç—å —Ñ–æ—Ç–æ. –¢—Ä–æ–≥–∞—Ç—å –º–∞—à–∏–Ω—É –Ω–µ–ª—å–∑—è, –Ω–æ –≤—ã –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ö–æ—Ç—è '
                                         '–±—ã —Ä–∞–∫—É—Ä—Å –ø–æ—Ö–æ–∂–∏–π) –£ –≤–∞—Å –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è!_', parse_mode="Markdown", )
                        bot.send_photo(message.chat.id,
                                       'AgACAgIAAxkBAAID32SQzbW7N8Hy25H21op_h3nuKSyTAAK5zjEbaTaJSMChYhqcuio8AQADAgADeQADLwQ')
                        bot.register_next_step_handler(message, question_8_photo)
                    else:
                        bot.register_next_step_handler(message, question_8_end)
            elif message.text.lower() in ['—è–Ω-–∞—É–¥–∏', '—è–Ω-audi']:
                if check_answer(message.chat, 'question_answer_end', "answer_4"):
                    bot.send_message(message.chat.id,
                                     '–í–µ—Ä–Ω–æ, –Ω–æ –ø–æ–¥–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω',
                                     parse_mode="Markdown", )
                    bot.register_next_step_handler(message, question_8_end)
                else:
                    bot.send_message(message.chat.id,
                                     '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è!',
                                     parse_mode="Markdown", )
                    change_answer(message.chat, 'question_answer_end', "answer_4")
                    if check_answer_final(message.chat, 'question_answer_end'):
                        bot.send_message(message.chat.id,
                                         '_–ú–æ–ª–æ–¥—Ü—ã. –¢–∞–∫, —ç—Ç–æ —Å–∞–ª–æ–Ω –ú–∞–π–±–∞—Ö–∞, –µ—Å–ª–∏ —á—Ç–æ. –ù–∞–ø–æ–º–∏–Ω–∞—é, –Ω–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äì '
                                         '–ø–æ–≤—Ç–æ—Ä–∏—Ç—å —Ñ–æ—Ç–æ. –¢—Ä–æ–≥–∞—Ç—å –º–∞—à–∏–Ω—É –Ω–µ–ª—å–∑—è, –Ω–æ –≤—ã –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ö–æ—Ç—è '
                                         '–±—ã —Ä–∞–∫—É—Ä—Å –ø–æ—Ö–æ–∂–∏–π) –£ –≤–∞—Å –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è!_', parse_mode="Markdown", )
                        bot.send_photo(message.chat.id,
                                       'AgACAgIAAxkBAAID32SQzbW7N8Hy25H21op_h3nuKSyTAAK5zjEbaTaJSMChYhqcuio8AQADAgADeQADLwQ')
                        bot.register_next_step_handler(message, question_8_photo)
                    else:
                        bot.register_next_step_handler(message, question_8_end)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                                 parse_mode="Markdown")
                bot.register_next_step_handler(message, question_8_end)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_8_end: {error}')
        bot.register_next_step_handler(message, question_8_end)


def question_8_photo(message):
    try:
        if check_end_time(message.chat):
            if message.content_type == 'photo':
                keyboard_inline = types.InlineKeyboardMarkup()
                confirm_button = types.InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data='confirm')
                cancel_button = types.InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='cancel')
                keyboard_inline.row(confirm_button, cancel_button)
                bot.send_photo(admin_id, message.photo[-1].file_id,
                               caption=f'–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É —ç—Ç–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è "{message.chat.title}":\n'
                                       f'\n'
                                       f'–ó–∞–¥–∞–Ω–∏–µ 8 (–≠–π–Ω—à—Ç–µ–π–Ω ):\n'
                                       f'\n'
                                       f'[ {message.chat} ]'
                                       f'#question_8#',
                               reply_markup=keyboard_inline)

                @bot.callback_query_handler(func=lambda call: True)
                def callback_handler(call):
                    text = call.message.caption
                    match = re.search(r'\[(.*?)\]', text)
                    question = re.search(r'\#(.*?)\#', text)
                    text = match.group(1).replace("'", "\"")
                    text_end = text.replace("None", "null")
                    value = json.loads(text_end)
                    chat = types.Chat.de_json(value)
                    if call.data == 'confirm':
                        end_question_at(chat, question.group(1))
                        bot.send_message(call.from_user.id, f'–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ —É \"{chat.title}\"')
                        bot.delete_message(call.from_user.id, call.message.id)
                        bot.send_message(chat.id, '–•–º, —É–≤–µ—Ä–µ–Ω —ç—Ç–æ —Ñ–æ—Ç–æ –æ—Ü–µ–Ω—è—Ç –ø–æ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤—É.\n–û—Ç–∫—Ä—ã–≤–∞–π –º–µ–Ω—é, '
                                                  '–ø–æ–µ—Ö–∞–ª–∏ –¥–∞–ª—å—à–µ üëçüèº', reply_markup=keyboard.keyboard(chat))
                        if check_final(chat):
                            end_at(chat)
                            bot.send_sticker(chat.id,
                                             'CAACAgIAAxkBAAEJWLJkjZnnq-9Z6FIKDa7Sjzjv2udGTgACaS8AAmjYaUgPYCMFmg1OtC8E')
                            bot.send_message(chat.id, '–í–∞—É! ü•≥ü•≥ü•≥\n'
                                                      '\n'
                                                      '–Ø –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ —Ö–æ—Ä–æ—à–æ –≤—ã —Ä–∞–∑–±–∏—Ä–∞–µ—Ç–µ—Å—å –≤ –∞–≤—Ç–æ–º–æ–±–∏–ª—è—Ö.'
                                                      '–ù–µ –∫–∞–∂–¥—ã–π —Å–º–æ–≥ –±—ã –ø—Ä–æ–π—Ç–∏ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã. '
                                                      '–ï—â—ë –∏ –≤–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∞–ø–ª–æ–¥–∏—Ä—É—é —Å—Ç–æ—è.\n'
                                                      '\n'
                                                      '–°–∫–æ—Ä–æ –≤–µ–¥—É—â–∏–π –æ–±—ä—è–≤–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã, –∞ –≤—ã –ø–æ–∫–∞ –º–æ–∂–µ—Ç–µ '
                                                      '–µ—â—ë –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –≤—ã—Å—Ç–∞–≤–∫–æ–π\n'
                                                      '‚ù§Ô∏è', reply_markup=None)
                    elif call.data == 'cancel':
                        bot.send_message(chat.id, '–•–º.. –¥–∞—é –µ—â—ë —à–∞–Ω—Å üòä')
                        bot.delete_message(call.from_user.id, call.message.id)
                        bot.send_message(call.from_user.id, f'–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ —É \"{chat.title}\"')
                        bot.register_next_step_handler(message, question_8_photo)
            else:
                bot.send_chat_action(message.chat.id, 'typing')
                bot.send_message(message.chat.id, '–•–º.. –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–æ–¥—É–º–∞—Ç—å –µ—â—ë üòä\n',
                                 parse_mode="Markdown")
                bot.register_next_step_handler(message, question_8_photo)
        else:
            bot.send_message(message.chat.id,
                             '_–£–≤—ã, –≤—Ä–µ–º—è –≤—ã—à–ª–æ_'
                             , parse_mode="Markdown")
    except Exception as error:
        print(f'question_8_photo: {error}')
        bot.register_next_step_handler(message, question_8_photo)


# -------------–í–æ–ø—Ä–æ—Å –∫–æ–Ω–µ—Ü---------------------------

def start_question_at(chat_data, name_colum):
    database = db.Data(chat_data)
    database.start_question_at(f'start_{name_colum}')


def end_question_at(chat_data, name_colum):
    database = db.Data(chat_data)
    database.end_question_at(f'{name_colum}')


def end_at(chat_data):
    database = db.Data(chat_data)
    database.end_at()

def check_final(chat_data):
    database = db.Data(chat_data)
    number = database.check_final()
    if all(number):
        return True
    else:
        return False


def check_end_time(chat_data):
    database = db.Data(chat_data)
    time_start_tuple = database.check_end_time()

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ–±—ä–µ–∫—Ç –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ –∫–æ—Ä—Ç–µ–∂–∞
    time_start = time_start_tuple[0]
    time_start_str = time_start.strftime('%H:%M:%S')

    now = datetime.now().time()
    start_time = datetime.strptime(time_start_str, '%H:%M:%S').time()
    end_time = (datetime.combine(datetime.today(), start_time) + timedelta(minutes=60)).time()

    if start_time <= now <= end_time:
        return True
    else:
        return False


# -------------------------------------------------
def change_answer(user_data, table_name, name_colum):
    database = db.Data(user_data)
    database.replace_answer(table_name, name_colum)


def check(user_id, name_colum):
    database = db.Data(user_id)
    number = database.check(name_colum)
    return number


def check_answer_final(chat_data, table_name):
    database = db.Data(chat_data)
    number = database.check_answer_final(table_name)
    if all(number):
        return True
    else:
        return False


def check_answer(chat_data, table_name, name_colum):
    database = db.Data(chat_data)
    answer_bool = database.response_answer(table_name, name_colum)
    if answer_bool[0]:
        return True
    else:
        return False


while True:
    try:
        bot.polling(none_stop=True, timeout=5)
    except Exception as error:
        print(error)
        time.sleep(3)
